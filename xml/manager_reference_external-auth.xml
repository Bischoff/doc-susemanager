<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC
  "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- taken from:
https://fedorahosted.org/spacewalk/wiki/SpacewalkAndIPA
-->

<chapter id="ch-ipa-integration">
 <title>&susemgr; and IPA integration</title><indexterm>
 <primary>external authentication</primary>
 <secondary>IPA</secondary></indexterm><indexterm>
 <primary>IPA integration</primary></indexterm>
 <para>
  With &susemgr; 2.1, it is possible to set up Web interface
  authentication via external identity providers and management
  solutions, for example ​FreeIPA. The new feature extends the original
  per-user PAM authentication and includes the following features:
 </para>
  <itemizedlist>
   <listitem>
    <para>
     Kerberos authentication in the Web interface (tickets). 
    </para>
   </listitem>
  <listitem>
   <para>
     Users do not need to be created in the &susemgr; database first.
   </para>
   </listitem>
   <listitem>
    <para>
     PAM authentication can be enabled for all users.
   </para>
   </listitem>
  <listitem>
   <para>
    User roles can be derived from user group membership in the external identity provider. 
   </para>
   </listitem>
  <listitem>
   <para>
    System group administrators can be derived from user group
    membership in the external identity provider per organization.
   </para>
   </listitem>
  </itemizedlist>
  <para>
    From a technical point of view, both Kerberos and PAM
    authentication take place on the Apache HTTP server, not in the
    &susemgr; appliance. That makes it possible to extend this
    authentication mechanism to other authentication providers. The
    following procedures describe how to get it up and running with
    FreeIPA. For detailed information on the FreeIPA project, see <ulink
    url="http://http://www.freeipa.org/"/>.
  </para>
  <sect1>
   <title>Enrolling &susemgr; to Identity Provider
   </title>
   <para>
    In the following sections, we assume that there is a FreeIPA server
    installed and running and that the &susemgr; server is
    IPA-enrolled in it. The enrollment can be achieved using the
    <command>ipa-client-install</command> command:
   </para>
   <screen>
    zypper install /usr/sbin/ipa-client-install -y
    # Use FreeIPA server autodiscovery
    ipa-client-install
   </screen>
   <para>
    If you want to enroll the &susemgr; server directly for a particular
    FreeIPA server to a particular domain, point the
    resolv.conf to that server and specify the domain:
   </para>
   <screen>
    cp /etc/resolv.conf /etc/resolv.conf.orig
    echo nameserver IP-address-of-the-FreeIPA-server > /etc/resolv.conf
    ipa-client-install --domain example.com
   </screen>
  </sect1>
  <sect1><title>Kerberos Prerequisites</title>
   <para>
    For the Kerberos authentication to work, you need the keytab of the
    &susemgr; HTTP service. First, create the service on the FreeIPA server:
   </para>
   <screen>
    kinit admin
    ipa service-add HTTP/hostname-susemanager-server
   </screen>
   <para>
    You can also run this directly on the &susemgr; server if the
    <command>ipa</command> command is installed there:
   </para>
   <screen>
    zypper install /usr/bin/ipa -y
    kinit admin
    ipa service-add HTTP/$( hostname )
   </screen>
   <para>
    Then retrieve the keytab on the &susemgr; server:
   </para>
   <screen>
kinit admin
ipa-getkeytab -s $( awk '/^server/ { print $3 }' /etc/ipa/default.conf ) -k /etc/http.keytab -p HTTP/$( hostname )
chown apache /etc/http.keytab
chmod 600 /etc/http.keytab
   </screen>
  </sect1>
  <sect1><title>Host-based Access Control Prerequisites</title>
   <para>
     To use the host-based access control (HBAC) with the &susemgr; server, create the HBAC service and rule on the FreeIPA server and set up PAM service of the same name on the &susemgr; server. Start with disabling the default allow_all rule, otherwise any user will be allowed access. The page <ulink url="​http://www.freeipa.org/page/Howto/HBAC_and_allow_all"/> describes the process in detail. These are the commands to use: 
   </para>
   <screen>
ipa hostgroup-add --desc 'Host group which will have allow_all_users_services HBAC enabled.' allow_all_hosts
ipa host-find --raw --pkey-only --sizelimit=0 \
    | awk '$1 == "fqdn:" { print "--hosts=" $2 }' | xargs -n100 ipa hostgroup-add-member allow_all_hosts
ipa hbacrule-add allow_all_users_services --usercat=all --servicecat=all --desc='Allow access to hosts in group allow_all_hosts to anybody from anywhere.'
ipa hbacrule-add-host allow_all_users_services --hostgroups=allow_all_hosts
ipa hbacrule-disable allow_all
   </screen>
   <para><remark>emap: renamed spacewalk-prod to
   susemanager-prod</remark> Then create a new user and the new
   service. In the following examples user
   <systemitem>bob</systemitem> and service
   <systemitem>susemanager-prod</systemitem> are created. The new user
   needs access to the service on your &susemgr; server. We assume you
   enter the commands on the &susemgr; server and therefore the $(
   hostname ) expands to the &susemgr; server hostname. If you run the
   commands on the FreeIPA server or other machines, put in the
   &susemgr; server hostname.
   </para>
   <screen>
# As admin user
# Create user bob
ipa user-add --random bob
# Authenticate as bob and change your random password, shown by the previous command
kinit bob
# To continue working, kinit back as admin
kinit admin
# Create UBAC service susemanager-prod and HBAC rule allow_susemanager-prod
ipa hbacsvc-add susemanager-prod
ipa hbacrule-add allow_susemanager-prod
# Add just bob and the &susemgr; server to this rule for this service
ipa hbacrule-add-service allow_susemanager-prod --hbacsvcs=susemanager-prod
ipa hbacrule-add-user allow_susemanager-prod --user=bob
ipa hbacrule-add-host allow_susemanager-prod --hosts=$( hostname )
# Remove the &susemgr; server from the host group we created
# when we have disabled the allow_all rule
ipa hostgroup-remove-member allow_all_hosts --hosts=$( hostname )
# Test that just the allow_susemanager-prod rule matches
ipa hbactest --user=bob --host=$( hostname ) --service=susemanager-prod
   </screen>
   <para>
    On the &susemgr; server, define the <systemitem>susemanager-prod</systemitem> PAM service and point it to sssd: 
   </para>
   <screen>
    # /etc/pam.d/susemanager-prod content:
    auth    required   pam_sss.so
    account required   pam_sss.so
   </screen>
  </sect1>
  <sect1><title>Configure sssd to Provide Information about Auto-populated Users</title>
   <para><remark role="needinfo">emap: still needs rebranding. Where
   to get sssd-dbus package for SUSE? Tools Channel?</remark> When a user
   authenticates either via Kerberos ticket or via form-based PAM
   authentication, it might be the first time this user logs in to
   the &susemgr; server. &susemgr; needs to create a record about the
   user in its internal database and for that certain additional
   attributes are needed besides the obvious login name. The <systemitem>sssd-dbus</systemitem>
   package provides the new <systemitem>ifp</systemitem> sssd service.
   </para>
<!-- The package is available from repos for recent Fedoras and Red Hat
   Enterprise Linux distributions:
​http://copr-fe.cloud.fedoraproject.org/coprs/adelton/identity_demo/
Retrieve the .repo file and put it to /etc/yum.repos.d, you can disable it by default: -->
<!--   <screen>
# Example for RHEL 6:
curl -o /etc/yum.repos.d/adelton-identity_demo.repo \
http://copr-fe.cloud.fedoraproject.org/coprs/adelton/identity_demo/repo/epel-6-x86_64/
sed -i 's/enabled=.*/enabled=0/' /etc/yum.repos.d/adelton-identity_demo.repo
   </screen>
-->
<!--   <para>
    Install sssd-dbus:
   </para>
-->
<!--   <screen>
     zypper install &ndash;&ndash;enablerepo=adelton-identity_demo sssd-dbus -y
   </screen>
-->
   <para>
    The <systemitem>sssd</systemitem> service needs to be configured
    to enable ifp, retrieval and caching of attributes needed by
    &susemgr;:
   </para>
   <screen>
# /etc/sssd/sssd.conf, the [domain/...] section, add:
ldap_user_extra_attrs = mail, givenname, sn
# /etc/sssd/sssd.conf, the [sssd] section, amend the services line to include ifp:
services = nss, pam, ssh, ifp
# /etc/sssd/sssd.conf, add new [ifp] section:
[ifp]
allowed_uids = apache, root
user_attributes = +mail, +givenname, +sn
   </screen>
   <para>
    Restart sssd:
   </para>
   <screen>
    service sssd restart
   </screen>
   <para>
    Test that it is possible to retrieve information about <systemitem>bob</systemitem>: 
   </para>
   <screen>
dbus-send --print-reply --system --dest=org.freedesktop.sssd.infopipe \
   /org/freedesktop/sssd/infopipe org.freedesktop.sssd.infopipe.GetUserAttr \
   string:bob array:string:mail
   </screen>
   <para><remark role="needinfo">emap: We don't support SELinux, right? Should the following stay or go?</remark>
    For the above test, you might need to put SELinux to permissive:
   </para>
   <screen>
    setenforce 0
   </screen>
   <para>
    For the production operation of Apache, provided you have new
    enough selinux-policy, enforcing with one boolean should work:
   </para>
   <screen>
    setenforce 1
    setsebool -P httpd_dbus_sssd on
   </screen>
  </sect1>
  <sect1><title>Configure Apache</title>
   <para>
    Authentication against the external identity provider (FreeIPA) is achieved via a set of Apache modules. They need to be installed.
   </para><remark>emap: adjust below.</remark>
   <screen>
zypper install mod_auth_kerb mod_authnz_pam mod_lookup_identity mod_intercept_form_submit -y
# For RHEL and Fedora 19, the last three modules can be found in the same zypper repo as the sssd-dbus package installed above:
zypper install --enablerepo=adelton-identity_demo  mod_authnz_pam mod_lookup_identity mod_intercept_form_submit -y
   </screen>
   <para>
     We then need to configure <systemitem>mod_authnz_pam</systemitem> and <systemitem>mod_intercept_form_submitm</systemitem> to use the <systemitem>susemanager-prod</systemitem> PAM service we've set up above:
   </para>
   <screen>
# /etc/httpd/conf.d/auth_kerb.conf
LoadModule auth_kerb_module modules/mod_auth_kerb.so
LoadModule authnz_pam_module modules/mod_authnz_pam.so
&lt;Location /rhn/Login.do&gt;
  AuthType Kerberos
  AuthName "Kerberos Login"
  KrbMethodNegotiate On
  KrbMethodK5Passwd Off
  KrbAuthRealms EXAMPLE.COM
  Krb5KeyTab /etc/http.keytab
  KrbLocalUserMapping On
  require pam-account susemanager-prod
  ErrorDocument 401 '&lt;html&gt;&lt;meta http-equiv="refresh" content="0; 
  URL=/rhn/Login2.do"&gt;&lt;body&gt;Kerberos authentication did not 
  pass.&lt;/body&gt;&lt;/html&gt;'
  # The following is needed as a workaround for 
  # https://bugzilla.redhat.com/show_bug.cgi?id=1020087
  ErrorDocument 500 '&lt;html&gt;&lt;meta http-equiv="refresh" content="0; 
  URL=/rhn/Login2.do"&gt;&lt;body&gt;Kerberos authentication did not 
  pass.&lt;/body&gt;&lt;/html&gt;'
&lt;/Location&gt;
   </screen>
   <screen>
# /etc/httpd/conf.d/intercept_form_submit.conf 
LoadModule intercept_form_submit_module modules/mod_intercept_form_submit.so
LoadModule authnz_pam_module modules/mod_authnz_pam.so
&lt;LocationMatch ^/rhn/(Re)?LoginSubmit\.do&gt;
  InterceptFormPAMService susemanager-prod
  InterceptFormLogin username
  InterceptFormPassword password
&lt;/LocationMatch&gt;
   </screen>
   <screen>
# /etc/httpd/conf.d/lookup_identity.conf 
LoadModule lookup_identity_module modules/mod_lookup_identity.so
&lt;LocationMatch /rhn/(Re)?Login(Submit)?\.do&gt;
  LookupUserAttr mail AJP_REMOTE_USER_EMAIL " "
  LookupUserAttr givenname AJP_REMOTE_USER_FIRSTNAME
  LookupUserAttr sn AJP_REMOTE_USER_LASTNAME
  # LookupUserAttr ou AJP_REMOTE_USER_ORGUNIT
  # LookupUserGroupsIter AJP_REMOTE_USER_GROUP
&lt;/LocationMatch&gt;
   </screen>
   <para>
    You can certainly put all the configuration into one configuration
    file and not list the <systemitem>mod_authnz_pam</systemitem> twice.
   </para>
   <para>
    Restart Apache: 
   </para>
   <screen>
    service httpd restart
   </screen>
  </sect1>
  <sect1><title>Configure Tomcat</title>
   <para>
    For tomcat to observe the authentication done by the Apache
    server, its server.xml configuration file needs to be amended:
   </para>
   <screen>
# /etc/tomcat/server.xml or /etc/tomcat6/server.xml, depending on distribution:
# Find the
#   &lt;Connector port="8009" protocol="AJP/1.3" redirectPort="8443" URIEncoding="UTF-8" ... /&gt;
# elements and add attribute
#   tomcatAuthentication="false"
# They should look like this:
&lt;Connector port="8009" protocol="AJP/1.3" redirectPort="8443" URIEncoding="UTF-8" address="127.0.0.1" tomcatAuthentication="false" /&gt;
&lt;Connector port="8009" protocol="AJP/1.3" redirectPort="8443" URIEncoding="UTF-8" address="::1" tomcatAuthentication="false" /&gt;
   </screen>
   <para>
    Restart Tomcat:
   </para>
   <screen>
service tomcat restart
# or
service tomcat6 restart
   </screen>
   <para>
    Wait for tomcat to be back up and test that you can log in to
    &susemgr; with your regular admin login and password.
   </para>
  </sect1>
  <sect1><title>Enabling External Authentication in &susemgr;</title>
   <para>
     By following the configuration steps above, external
     authentication is enabled. Existing &susemgr; users may login to
     &susemgr; externally authenticated by the FreeIPA server. To
     allow login also to users, that currently do not have &susemgr;
     accounts you have the following options:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Pre-create their accounts in desired organization via Web interface or API.
     </para>
    </listitem>
   <listitem>
    <para>
     Set the Org. Unit for every user on the FreeIPA server (that shall be able to login):
    </para>
    <screen>
     ipa user-mod bob --orgunit="My Organization"
    </screen>
    <para>
     Select the <guimenu>Use organization unit name passed from
     IPA</guimenu> option on the
     <menuchoice><guimenu>Admin</guimenu><guimenu>Users</guimenu><guimenu>External
     Authentication</guimenu></menuchoice> page. If the orgunit
     matches to any organization name within &susemgr;, the
     appropriate &susemgr; account will automatically be created for
     the user in <guimenu>My Organization</guimenu> at first login.
    </para>
    <para>
     To make use out of the orgunit option, uncomment following line
     in <filename>/etc/httpd/conf.d/lookup_identity.conf</filename>:
    </para>
    <screen>
     LookupUserAttr ou AJP_REMOTE_USER_ORGUNIT
    </screen>
    <para>
      Now restart the <systemitem>httpd</systemitem> service.
    </para>
    </listitem>
    <listitem>
    <para>
     On the <guimenu>External Authentication</guimenu> page, select <guimenu>Default organization</guimenu> and the &susemgr; account will automatically be created for the
     user at first login in the <guimenu>Default organization</guimenu>.
    </para>
    </listitem>
   </itemizedlist>
   <note>
    <para>
     Automatically created accounts can only be used for local logins
     after setting a valid &susemgr; password.
    </para>
   </note>
  </sect1>
  <sect1><title>Try Form-based PAM Authentication</title>
   <para>
    Purge your Kerberos ticket cache: 
   </para>
   <screen>
    kdestroy -A
   </screen>
   <para>
    Log out from your admin session and attempt to log in as <systemitem>bob</systemitem>
    enterring the password selected during the <command>kinit</command> <systemitem>bob</systemitem> step. You
    should be able to log in and if you check the user details, the
    name and email address is populated from the FreeIPA server. Log
    out.
   </para>
  </sect1>
  <sect1><title>Try Kerberos Authentication</title>
   <para>
    Kinit as <systemitem>bob</systemitem> and attempt to access the
    home page of your &susemgr; server:
   </para>
   <screen>
    kinit bob
   </screen>
   <para>
    You should be authenticated directly, without any login form
    shown, based on your ticket granting ticket that you've obtained
    with the kinit command.
   </para>
  </sect1>
  <sect1><title>Grant Additional Privileges According to the External Group Membership</title>
   <para>
    To make use of external group membership, uncomment following line
    in /etc/httpd/conf.d/lookup_identity.conf:
   </para>
   <screen>
    LookupUserGroupsIter AJP_REMOTE_USER_GROUP
   </screen>
   <para>
    Restart the <systemitem>httpd</systemitem> service.
   </para>
  </sect1>
   <sect1><title>Set Additional &susemgr; Roles</title>
   <para>
    Let's create a separate group for <systemitem>bob</systemitem>. Run on FreeIPA server:
   </para>
   <screen>
    ipa group-add susemanager-channel-admins
    ipa group-add-member susemanager-channel-admins --users=bob
   </screen>
   <para>
    Log in to &susemgr; Web interface as &susemgr; administrator and
    navigate to
    <menuchoice><guimenu>Admin</guimenu><guimenu>Users</guimenu><guimenu>External
    Authentication</guimenu><guimenu>Group Role
    Mapping</guimenu></menuchoice>.
   </para>
   <para>
    Click <guimenu>Create new External Group</guimenu> and fill in the
    name of the external group created on the FreeIPA server in the
    previous step:
    <systemitem>susemanager-channel-admins</systemitem>. Additionally
    select <guimenu>Channel Administrator</guimenu> or any other roles
    <systemitem>bob</systemitem> shall inherit.
   </para>
   <para>
    Next time <systemitem>bob</systemitem> logs in to &susemgr;
    authenticated by the FreeIPA server, he will additionally be
    granted the Channel Administrator role. Unless the <guimenu>Keep
    temporary roles granted due to external authentication
    configuration</guimenu> option is checked on the
    <menuchoice><guimenu>Admin</guimenu><guimenu>Users</guimenu><guimenu>External
    Authentication</guimenu><guimenu>Configuration
    page</guimenu></menuchoice>, <systemitem>bob</systemitem> will
    lose the additional role(s) when he logs in to &susemgr; using
    his username and &susemgr; password.
   </para>
  </sect1>
</chapter>
