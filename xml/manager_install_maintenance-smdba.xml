<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE sect1 PUBLIC
  "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>

<sect1 id="s1-config-smdb">
 <title>Configuring &susemgr;'s Database (smdba)</title>
 <!-- This is partially also in "s1-cli-config-smdb":
      "s1-config-smdb.options" and "s1.config-smdb.start-and-stop" -->
 <indexterm>
    <primary>smdba</primary>
 </indexterm>
 <para><remark role="needinfo">emap: any updates needed in this section?</remark>
  &susemgr; provides the <command>smdba</command> command for
  managing the installed database. It is the successor of
  <command>db-control</command>, which is not supported anymore.
 </para>
  <para>
   The <command>smdba</command> command works on local databases only, not
   remote. This utility allows you to do several administrative tasks like
   backing up and restoring the database, everything from creating, verifying,
   and restoring backups to obtain the database status and restart the
   database if necessary. The <command>smdba</command> command supports
   &postgresql; 9.1 and Oracle 10g or 11g databases with different feature
   sets.
  </para>

  <important>
   <!-- bnc#799068 -->
   <title>Running <command>smdba</command> Relies on
   <command>sudo</command> Enablement</title>

   <para>
    Running <command>smdba</command> relies on proper
    <command>sudo</command> configuration.  <command>sudo</command>
    allows you to invoke <command>smdba</command> as a regular user and
    thus, you are save from executing unwanted system changes.
   </para>
   <para>

    For example, to allow the user <systemitem
    class="username">admin</systemitem> (the <quote>administrative
    UID</quote>) to execute <command>smdba</command> commands, and thus
    manipulating the underlying database with the <quote>operative
    UID</quote>, make sure something as follows is configured in
    <filename>/etc/sudoers</filename>:
   </para>
   <screen>admin   ALL = (oracle, postgres) /usr/bin/smdba</screen>
   <para>
    With this settings <systemitem class="username">admin</systemitem>
    will be allowed to access the target database account
    (<literal>oracle</literal> or <literal>postgres</literal>).
   </para>
   <para>
    For configuring <command>sudo</command> and its security
    implications, see the <literal>sudo</literal> and
    <literal>sudoers</literal> manpages and the extensive comments in
    the <filename>/etc/sudoers</filename> configuration file.
   </para>
  </important>

  <para>
   Find basic information about <command>smdba</command> in the
   <literal>smdba</literal> manpage.
  </para>
  <note>
   <title>Restart Spacewalk Services When Connection is Lost</title>
   <para>
    If you have stopped or restarted the database, it can happen
    that the Spacewalk services lost their connections. In such a case,
    run the following command:
   </para>
   <screen><command>spacewalk-service</command> restart</screen>
  </note>
  
  <sect2 id="s1-config-smdb.options">
   <title>Control Options</title>
   <para>
    Depending on the database installed, <command>smdba</command>
    provides several subcommands:
   </para>
   
    <example id="ex.config-smdb.ora">
      <title>Available Options on a Machine with an Oracle Database</title>
      <screen>backup-list       List of available backups
backup-restore    Restore the SUSE Manager Database from backup
db-start          Start SUSE Manager database
db-status         Get SUSE Database running status
db-stop           Stop SUSE Manager database
listener-restart  Restart SUSE Database Listener
listener-start    Start the SUSE Manager Database listener
listener-status   Show database status
listener-stop     Stop the SUSE Manager Database listener
space-overview    Show database space report
space-reclaim     Free disk space from unused object in tables
                  and indexes
space-tables      Show space report for each table
stats-overview    Show tables with stale or empty statistics
stats-refresh     Gather statistics on SUSE Manager Database
                  database objects
system-check      Common backend healthcheck</screen>
    </example>
    
    <example>
      <title>Available Options on a Machine with a &postgresql; Database</title>
      <screen>backup-hot      Enable continuous archiving backup
backup-restore  Restore the SUSE Manager Database from backup.
backup-status   Show backup status.
db-start        Start the SUSE Manager Database.
db-status       Show database status.
db-stop         Stop the SUSE Manager Database.
space-overview  Show database space report.
space-reclaim   Free disk space from unused object in tables and indexes.
space-tables    Show space report for each table.
system-check    Common backend healthcheck.</screen>
    </example>
    
    <note>
     <title><command>smdba help</command> Output Depends on the Database
     Used</title> 
     <para>
      For a list of available commands on your particular appliance,
      call <command>smdba help</command>.  Each subcommand can contain
      different options depending on the database used. To display the
      help message for a specific subcommand, call <command>smdba
      <replaceable>COMMAND</replaceable> help</command>.
     </para>
    </note>
  </sect2>
  
  <sect2 id="s1.config-smdb.start-and-stop">
    <title>Starting and Stopping the Database</title>
    <para>There are three commands to start, stop, or get
      the status of the database. These commands work with both
      databases. Use the following commands:</para>
    <screen>smdba db-status
Checking database core...       online</screen>
<screen>smdba db-stop
Stopping the SUSE Manager database...
Stopping listener:     done
Stopping core:         done</screen>
<screen>smdba db-status
Checking database core...       offline</screen>
<screen>smdba db-start
Starting listener:     done
Starting core...       done</screen>
  </sect2>
  
  <sect2 id="s1.config-smdb.create-backup">
    <title>Backing up the Database</title>
    <para>Backing up the database depends on the installed database:</para>
    
    <variablelist>
      <varlistentry>
        <term>Oracle</term>
        <listitem>
          <para>The <command>smdba</command> command can be used to create a
      <quote>hot backup</quote>, which is a backup that is performed
      without shutting down the database.
    </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>&postgresql;</term>
        <listitem>
          <para>
           The <command>smdba</command> command performs a
           <emphasis>continuous archiving backup</emphasis>.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    
    <para>To perform a hot backup for Oracle, do the following:</para>
    <procedure>
     <step>
      <para>
       For Oracle, there is no need to specify the space where to store the
       backups.  By default, backups will be stored at
       <filename>/opt/apps/oracle/flash_recovery_area/<replaceable>uppercase SID</replaceable>/</filename>.
      </para>
      </step>
      <step>
        <para>Perform the hot backup:</para>
        <screen>smdba backup-hot
Backing up the database:       finished
Data files archived:
     /opt/apps/oracle/oradata/susemanager/system01.dbf
     /opt/apps/oracle/oradata/susemanager/sysaux01.dbf
     /opt/apps/oracle/oradata/susemanager/data_01.dbf
     /opt/apps/oracle/oradata/susemanager/undotbs01.dbf
     /opt/apps/oracle/oradata/susemanager/users01.dbf

Archive logs:
	/opt/apps/oracle/oradata/susemanager/archive1_32_784110049.dbf
...</screen>

<para>
 After the command returns without any errors, it contains some files in
 the <filename>flash_recovery_area</filename> directory.
</para>
      </step>
      
      <step>
       <para>Get a list of available backups:</para>
       <screen>smdba backup-list
Getting available backups:    finished
Backups available:

Name:   /opt/apps/oracle/flash_recovery_area/SUSEMANAGER/backupset/2013_06_13/o1_mf_nnndf_TAG20130613T165358_8vmq8722_.bkp
Files:
        Type: Full      Date: 13-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/system01.dbf
        Type: Full      Date: 13-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/sysaux01.dbf
        Type: Full      Date: 13-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/undotbs01.dbf
        Type: Full      Date: 13-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/users01.dbf
        Type: Full      Date: 13-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/data_01.dbf

Name:   /opt/apps/oracle/flash_recovery_area/SUSEMANAGER/backupset/2013_06_14/o1_mf_nnndf_TAG20130614T040008_8vny9932_.bkp
Files:
        Type: Full      Date: 14-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/system01.dbf
        Type: Full      Date: 14-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/sysaux01.dbf
        Type: Full      Date: 14-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/undotbs01.dbf
        Type: Full      Date: 14-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/users01.dbf
        Type: Full      Date: 14-JUN-13         File:
/opt/apps/oracle/oradata/susemanager/data_01.dbf
</screen>
      </step>
    </procedure>
    
    <para>To perform a hot backup for &postgresql;, do the
    following:</para>

    <procedure>
      <step>
       <para>Allocate permanent space on your remote storage, which you
       use for general backups (NAS, iSCSI target, etc.). For
       example:</para>
       <screen>/mnt/backup/</screen>
       <para>
        This directory should always be the same and never change.
        It will be a permanent target to store new backups and restore
        from it during a disaster recovery.
       </para>
      </step>
      <step>
       <para>
        Create a directory with the correct permissions in your
        target directory, e.g., with using <command>sudo</command>:
       </para>
       <screen>sudo -u postgres mkdir /mnt/backup/database</screen>
       <para>
        Alternatively, as &rootuser;:
       </para>
       <screen>install -d -o postgres /mnt/backup/database</screen>
       <para>Or:</para>
       <screen>mkdir /mnt/backup/database
chown postgres:postgres /mnt/backup/database</screen>
      </step>
      <step>
       <!-- bnc#849225 -->
       <para>
        If you want to create a backup for the first time, run:
       </para>
       <screen><command>smdba</command> backup-hot --enable=on --backup-dir=/mnt/backup</screen>

       <para>
        This command performs a restart of the &postgresql; database. If
        you want to renew the basic backup, use the same command.
       </para>
      </step>
      <step>
        <para>Perform the hot backup:</para>
        <screen>smdba backup-hot --backup-dir=/mnt/backup/database
...</screen>
       <para>
        If the command exits without any errors, find the backup files
        in your <filename>/mnt/backup/database</filename> directory.
       </para>
      </step>
    </procedure>

  </sect2>  
  
  <sect2 id="s1.config-smdb.restore-backup">
    <title>Restoring Backups</title>
    <para>Use <command>smdba backup-restore</command>
    to restore to an earlier point in time. To restore the backup,
    proceed as follows:
    </para>

    <procedure>
      <step>
        <para>Shutdown the database:</para>
        <screen>smbda db-stop</screen>
      </step>
      <step>
        <para>Start the restore process:</para>
        <screen>smdba backup-restore start</screen>
      </step>
      <step>
        <para>Restart the database:</para>
        <screen>smbda db-start</screen>
      </step>
    </procedure>
    
    <para>
     The above steps can be combined with:
    </para>
    <screen>smdba backup-restore force</screen>
    <para>
     In this case it will select the most recent backup and purge the
     rest.  Every time you create a new backup, it also purges the
     previous backups.
    </para>

    <note>
     <title>Restoring the Most Recent Backup Only</title>
     <para>
      Because <command>smdba</command> makes automatic hot backups, it
      allows to restore only the most recent backup, and merging the
      current archive logs on top of it.
     </para>
    </note>
  </sect2>

  <sect2 id="s1.config-smdb.archivelog">
   <!-- taken from
   http://wiki.novell.com/index.php/SUSE_Manager/Archivelog17 and
   adjusted
   ke, 2013-06-13 -->
  <title>Archive Log Settings</title>
  <para>
In &susemgr; with an embedded database, archive logging is enabled by
efault, on oracle as well as on &postgresql;.<remark
role="needinfo">emap: Only postgres is used for embedded database,
right? Remove the "as well as" clause?</remark> This feature allows
the database management tool <command>smdba</command> to perform hot
backups.
  </para>

  <para>
   With archive log enabled, far more data is stored on the hard disk:
  </para>
  <itemizedlist>
   <listitem>
    <para>
Using an Oracle database, the archive log data will be removed as soon as
you create a database backup with <command>smdba</command>.
    </para>
   </listitem>
   <listitem>
    <para>
With &postgresql; only a limited number of archive logs is kept. With
the default configuration, approx. 64 files with a size of 16 MiB are
kept.
    </para>
   </listitem>
  </itemizedlist>
    <para>
Creating a user and syncing the channels:
    </para>
  <itemizedlist>
   <listitem>
    <para>
sles11-sp1-pool-x86_64
    </para>
   </listitem>
   <listitem>
    <para>
sles11-sp1-updates-x86_64
    </para>
   </listitem>
   <listitem>
    <para>
sles11-sp2-core-x86_64
    </para>
   </listitem>
   <listitem>
    <para>
sles11-sp2-updates-x86_64
    </para><remark role="needinfo">emap: add drop SP1 and add SP3? Update space info below?</remark>
   </listitem>
  </itemizedlist>
  <para>
   will produce on &postgresql; ~1 GB and on oracle ~7 GB additional data.
   So it is important to think about a backup strategy and create a
   backup in a regular way.
  </para>

  <para>
The archive logs are stored in:
  </para>

<itemizedlist>
   <listitem>
    <para>
<filename>/var/log/pgsql/data/pg_xlog/</filename> (&postgresql;)
    </para>
   </listitem>
   <listitem>
    <para>
<filename>/opt/apps/oracle/oradata/<replaceable>sid</replaceable>/</filename> (Oracle)
    </para>
   </listitem>
</itemizedlist>
<!--
If you want to disable archive logging on the oracle database ('''! not recommended !''')
you can turn it off with:

<pre>smdba system-check force-archivelog-off</pre>

Performing a backup with smdba is '''not possible''' if you turn off the archive log.
-->
  </sect2>

  <sect2 id="s1.config-smdb.spaces">
    <title>Getting Overview of Occupied Database Space</title>
    <para>Database experts can use the subcommand
      <command>space-overview</command> to get a report about occupied
      table spaces, for example:</para>
    <screen>smdba space-overview

Tablespace | Size (Mb) | Used (Mb) | Avail (Mb) | Use %
-----------+-----------+-----------+------------+------
DATA_TBS   | 193.5     | 306.5     | 500        | 61   
SYSAUX     | 38.75     | 631.25    | 670        | 94   
SYSTEM     | .75       | 719.25    | 720        | 99   
TEMP       | 76        | 0         | 76         | 0    
UNDOTBS1   | 161.625   | 13.375    | 175        | 7    
USERS      | 3.6875    | 1.3125    | 5          | 26</screen>
    <para>This command is available for both databases, Oracle and
      &postgresql;. For a more detailed report, use the
      <command>space-tables</command> subcommand. It lists the table and
    its size, for example:</para>
    <screen>smdba space-tables

Table                          | Size     
-------------------------------+----------
PXTSESSIONS                    | 64.00K   
QRTZ_BLOB_TRIGGERS             | 64.00K   
QRTZ_CALENDARS                 | 64.00K   
QRTZ_CRON_TRIGGERS             | 64.00K   
QRTZ_FIRED_TRIGGERS            | 64.00K
...</screen>
  </sect2>
   <sect2 id="s1.config-smdb.oracle2postgres">
    <title>Migrating Embedded Database from Oracle to &postgresql;</title>
    <remark>emap: according to mc, this might also work for external Oracle db
    to Postgres. Still untested, so I'm omitting it.</remark>
    <para>
     &susemgr; provides a tool for easy migration of an embedded Oracle
     database to &postgresql;. Simply run:
     <command>/usr/lib/susemanager/bin/susemanager-oracle2postgres.sh</command>.
    </para>
    <para>
     This script performs all necessary steps. For transparency reasons only,
     we line out what happens during the migration:
    </para>
     <procedure>
      <step>
	<para><command>install_latest spacewalk-utils</command>: installs all
	tools necessary for migration.
        </para>
      </step>
      <step>
       <para><command>install_latest susemanager-schema</command>: since
       schema versions must be identical, the new &postgresql; database uses the
       existing schema.
       </para>
      </step>
      <step>
       <para><command>spacewalk-service stop</command>: halts the spacewalk
       service while the database keeps running.
       </para>
      </step>
      <step>
	<para><command>upgrade_schema</command>: upgrades to the new schema.
        </para>
      </step>
      <step>
       <para><command>dump_schema</command>: writes all schema data to the
       hard disk as plain text, which should take a while.
       </para>
      </step>
      <step>
	<para><command>switch_oracle2postgres</command>: stops the Oracle
	database, removes it from the boot process (<command>insserv -r
	oracle</command>), then deletes all spacewalk Oracle packages and
	installs the necessary &postgresql; packages.
        </para>
      </step>
      <step>
       <para><command>setup_postgres</command>: initializes and configures the
       database.
       </para>
      </step>
      <step>
       <para><command>configure_suma</command>: loads the database with the
       schema and rewrites the configuration files for &postgresql;.
       </para>
      </step>
      <step>
	<para><command>import_schema</command>: loads all data into the
	database, which will take a while.
        </para>
      </step>
      <step>
       <para><command>spacewalk-service start</command>: starts all services.
       </para>
      </step>
    </procedure>
  </sect2>
</sect1>
