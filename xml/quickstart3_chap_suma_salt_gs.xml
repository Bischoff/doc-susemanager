<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="salt.gs.guide.introduction">
    <title>Getting Started with Salt</title>

    <sect1 xml:id="salt.gs.guide.intro">
        <title>Introduction</title>
        <para>This chapter provides an overview of new salt features added in SUSE Manager 3. This
            chapter assumes you have completed all former sections within the Getting Started Guide
            and have a running SUSE Manager server and at least one on-boarded salt-minion. If you
            find yourself stuck at any point refer to the official Salt getting started guide is
            located at: <link
                xlink:href="https://docs.saltstack.com/en/getstarted/fundamentals/index.html"/>
        </para>

    </sect1>

    <sect1 xml:id="salt.gs.guide.testing.first.minion">
        <title>Running Commands</title>
        <variablelist>
            <varlistentry>
                <term>Salt Calls</term>
                <listitem>
                    <para>A great place to start would be learning basic Salt calls. Salt calls are
                        defined by three main components:
                        <screen>salt '&lt;target>' &lt;function> [arguments]</screen></para>
                </listitem>
            </varlistentry>


            <varlistentry>
                <term>Targeting</term>
                <listitem>
                    <para>Use the second component in a Salt call to define a target machine.
                        Specify the minion or group of minions you would like to run a function
                        on.</para>
                    <para><emphasis role="bold">General Targeting</emphasis></para><para>List available grains on all minions:<screen>salt '*' grains.ls</screen></para>
                    <para>Ping a specific minion:</para><para><screen>salt 'web1.example.com' test.ping</screen></para>
                    <para><emphasis role="bold">Glob Targeting</emphasis></para>
                    <para>Ping all minions using a domain:</para>
                    <para>
                        <screen>salt '*.example.com' test.ping</screen>
                    </para>
                    <para>Display the OS name of all  minions with the label webserver:</para>
                    <para><screen>salt 'webserver*' grains.item oscodename</screen></para>
                    <para><emphasis role="bold">List
                        Targeting</emphasis><screen>salt -L 'webserver.example.com,db.example.com' test.ping</screen></para>
                    <para><emphasis role="bold">Regular Expression
                        Targeting</emphasis><screen>salt -E '(?!web)' test.ping</screen></para>
                    <para><emphasis role="bold">IP Address Targeting</emphasis></para>
                    <para>List minion IP addresses:</para>
                    <para>
                        <screen>salt '*' network.ip_addrs</screen>
                    </para>
                    <para>Ping a specific minion IP address.</para>
                    <para><screen>salt -S '172.31.60.74' test.ping</screen></para>
                    <para><emphasis role="bold">Ping all minions on a
                        subnet</emphasis><screen>salt -S 172.31.0.0/16 test.ping</screen></para>
                </listitem>
            </varlistentry>

        </variablelist>


    </sect1>


    <sect1>
        <title>Common Administrative Salt Commands</title>
        <para>The following list provides several of the most useful salt commands.</para>
        <variablelist>
            <varlistentry>
                <term>salt-run</term>
                <listitem>
                    <para><screen>salt-run manage.up        #Prints a list of all minions that are up and running</screen>
                        <screen>salt-run manage.down      #Prints a list of all minions that are down and not running</screen>
                        <screen>salt-run manage.status    #Prints a list containing the current status of all salt minions</screen>
                        <screen>salt-run manage.versions  #Check the version of salt on the master and active minions</screen></para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>salt-cp</term>
                <listitem>
                    <para>Copies a file to a minion or set of minions.
                        <screen>salt-cp '*' foo.conf /root</screen> For more information see: <link
                            xlink:href="https://docs.saltstack.com/en/latest/ref/cli/salt-cp.html"
                        /></para>
                </listitem>
            </varlistentry>
        </variablelist>

    </sect1>

    <sect1 xml:id="salt.gs.guide.executing.remote.commands">
        <title>Executing Remote Commands</title>
        <para/>
        <sect2 xml:id="salt.gs.guide.executing.remote.commands.webui">
            <title>Using the WebUI</title>
            <para/>
        </sect2>

        <sect2 xml:id="salt.gs.guide.executing.remote.commands.cli">
            <title>On the Command Line</title>
            <para/>
        </sect2>
    </sect1>

    <sect1 xml:id="salt.gs.guide.salt.file.locations">
        <title>Salt File Locations</title>
        <para>This section covers Salt file locations located your &susemgr; server. You can find a
            listing of Salt <literal>file_roots</literal>, <literal>pillar_roots</literal> and
                <literal>extension_modules</literal> in:
                <filename>/etc/salt/master.d/susemanager.conf</filename>
            <screen>#Configure different file roots

file_roots:
  base:
    - /usr/share/susemanager/salt
    - /srv/susemanager/salt
    - /srv/salt

# Configure different pillar roots

pillar_roots:
  base:
    - /usr/share/susemanager/pillar
    - /srv/pillar

# Extension modules path

extension_modules: /usr/share/susemanager/modules

# Master top configuration

master_tops:
  mgr_master_tops: True
</screen></para>

        <para>The following tips should be kept in mind when working with
                <filename>/etc/salt/master.d/susemanager.conf</filename><itemizedlist>
                <listitem>
                    <para>Files listed are searched in the order they appear.</para>
                </listitem>
                <listitem>
                    <para>The first file found is called.</para>
                </listitem>
            </itemizedlist></para>



        <sect2 xml:id="salt.gs.guide.salt.file.locations.file.roots">
            <title>file_roots</title>
            <para>&susemgr; as the salt-master reads its state data from three specific file root
                directories.</para>
            <variablelist>
                <varlistentry>
                    <term><filename>/usr/share/susemanager/salt</filename></term>
                    <listitem>
                        <para>This directory is generated by &susemgr; and is created from the
                            python module
                                <filename>/usr/share/susemanager/modules/tops/mgr_master_tops.py
                            </filename>. It is shipped and updated together with &susemgr; and
                            includes certificate setup and common state logic that will be applied
                            to packages and channels. This directory should not be touched by a
                            user.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><filename>/srv/susemanager/salt</filename></term>
                    <listitem>
                        <para>This directory is created by &susemgr; and contains assigned channels
                            and packages for minions, groups and organizations. This file will be
                            overwritten and regenerated. A good analogy for this directory would be
                            the &susemgr; database translated into salt directives. This directory
                            should not be touch by a user.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><filename>/srv/salt</filename></term>
                    <listitem>
                        <para>The directory <filename>/srv/salt</filename> is for your custom state
                            data, salt modules etc. &susemgr; does not touch or do anything with
                            this directory. However the state data placed here affects the Highstate
                            of minions and is merged with the result generated by &susemgr;. Place
                            your custom state data here.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </sect2>



        <sect2 xml:id="salt.gs.guide.salt.file.locations.pillar.roots">
            <title>pillar_roots</title>

            <para>&susemgr; as the salt-master reads its pillar data from two specific pillar root
                directories.</para>
            <variablelist>
                <varlistentry>
                    <term><filename>/usr/share/susemanager/pillar</filename></term>
                    <listitem>
                        <para>This directory is generated by &susemgr;. It is shipped and updated
                            together with &susemgr;. This directory should not be touched by a
                            user.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><filename>/srv/pillar/</filename></term>
                    <listitem>
                        <para>This directory is for your custom pillar data. &susemgr; does not
                            touch or do anything with this directory. However the pillar data placed
                            here is merged with the pillar result created by &susemgr;.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </sect2>
    </sect1>

    <sect1 xml:id="salt.gs.guide.creating.targeting.applying.states">
        <title>Creating, Targeting and Applying States</title>
        <para/>

        <sect2 xml:id="salt.gs.guide.creating.targeting.applying.states.webui">
            <title>Using the WebUI</title>
            <para/>
        </sect2>

        <sect2 xml:id="salt.gs.guide.creating.targeting.applying.states.cli">
            <title> On the Command Line</title>
            <para/>
        </sect2>
    </sect1>


    <sect1 xml:id="salt.gs.guide.apply.states.org.group.single.systems">
        <title>Applying States on an Organization, Group or a Single System</title>
        <para/>

        <sect2 xml:id="salt.gs.guide.apply.org.level">
            <title>Organization Level</title>
            <para/>
        </sect2>

        <sect2 xml:id="salt.gs.guide.apply.group.level">
            <title>Group Level</title>
            <para/>
        </sect2>

        <sect2 xml:id="salt.gs.guide.apply.single.level">
            <title>Single System Level</title>
            <para/>
        </sect2>
    </sect1>

    <sect1 xml:id="salt.gs.guide.state.catalog">
        <title>The State Catalog</title>
        <para/>
    </sect1>

    <sect1 xml:id="salt.gs.guide.troubleshooting.help">
        <title>Troubleshooting and Help</title>
        <para/>
    </sect1>


</chapter>
