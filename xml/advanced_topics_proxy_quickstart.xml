<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
                 type="text/xml" 
                 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
         xml:id="advanced.topics.proxy.quickstart">
 <title>&susemgr; &productnumber; Proxy</title>

 <info>
  <abstract>
   <para>
    This chapter explains how to install and set up &susemgr;
    &productnumber; Proxy.
   </para>
  </abstract>
 </info>

  <sect1 xml:id="at.manager.proxy.concepts">
    <title>Overview</title>
    <para> &susemgr; &productnumber; Proxy is a &susemgr; add-on that caches software packages on
      an internal, central server. The proxy caches patch updates from &suse; or custom RPMs
      generated by third-party organizations. A proxy allows you to use bandwidth more effectively
      because client systems connect to the proxy for updates, and the &susemgr; server is no longer
      required to handle all client requests. The proxy also supports transparent custom package
      deployment. </para>

    <para> &susemgr; Proxy is an open source (GPLv2) solution that provides the following features: </para>

    <itemizedlist>
      <listitem>
        <para> Cache software packages within a Squid proxy. </para>
      </listitem>
      <listitem>
        <para> Client systems see the &susemgrproxy; as a &susemgr; server instance. </para>
      </listitem>
      <listitem>
        <para> The &susemgrproxy; is registered as a client system with the &susemgr; server.
        </para>
      </listitem>
    </itemizedlist>


    <para> The primary goal of a &susemgrproxy; is to improve &susemgr; performance by reducing
      bandwidth requirements and accelerating response time. </para>
  </sect1>

  <sect1 xml:id="at.manager.proxy.requirements">
    <title>&susemgr; &productnumber; Proxy Requirements</title>
    <para> The following section provides &susemgr; &productnumber; Proxy requirements.</para>

    <formalpara>
     <title>Supported Client Systems</title>
     <para>
      For supported clients and their requirements, see <xref
      linkend="mgr.supported.client.systems"/>.
     </para>
    </formalpara>

    <formalpara>
     <title>Hardware Requirements</title>
     <para>
      Hardware requirements highly depend on your usage scenario. When
      planning proxy environments, consider the amount of data you want
      to cache on your proxy. If your proxy should be a 1:1 mirror of
      your &susemgr;, the same amount of disk space is required. For
      specific hardware requirements, see the following table.
     </para>
    </formalpara>

    <informaltable>
      <tgroup cols="2">
        <colspec colname="c1" colwidth="1*"/>
        <colspec colname="c2" colwidth="4*"/>
        <thead>
          <row>
            <entry>
              <para> Hardware </para>
            </entry>
            <entry>
              <para> Required </para>
            </entry>

          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para> CPU </para>
            </entry>
            <entry>
              <para> Multi-core 64bit CPU (x86_64). <remark>We need to test number of
                cores</remark></para>
            </entry>
          </row>
          <row>
            <entry>
              <para> RAM </para>
            </entry>
            <entry>
              <remark>Check to ensure these are the correct memory requirements with team</remark>
              <para> Minimum 4&nbsp;GB for a non-production server </para>
              <para> Minimum 16&nbsp;GB for a production server</para>
            </entry>
          </row>
          <row>
            <entry>
              <para> Free Disk Space </para>
            </entry>
            <entry>
             <para>
              Minimum 100&nbsp;GB for base installation and at least
              50 GB for caching per SUSE product and +100 GB per Red Hat
              product; a resizeable partition strongly recommended.
             </para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <formalpara>
     <title>Additional Requirements</title>
     <para>
      For additional network requirements, see <xref
      linkend="mgr.additional.requirements"/>.
     </para>
    </formalpara>

    <formalpara>
      <title>&scc;</title>
      <para>For using &susemgr; &productnumber; Proxy, you need an account at &scc; (SCC) where
        your purchased products and product subscriptions are registered. Make sure you have the
        following subscriptions:</para>
    </formalpara>
    <itemizedlist>
      <listitem>
        <para> One or more subscriptions for &susemgrproxy;. </para>
      </listitem>
      <listitem>
        <para> One or more subscriptions for &susemgr;. </para>
      </listitem>
      <listitem>
        <para> Subscriptions for the products on the client systems you want to register with
          &susemgr; via &susemgrproxy;. </para>
      </listitem>
      <listitem>
        <para> Subscriptions to client entitlements for the client system you want to register with
          &susemgr; via &susemgrproxy;. </para>
      </listitem>
    </itemizedlist>


    <formalpara>
      <title>Network Time Protocol (NTP)</title>
      <para>
       The connection to the Web server via Secure Sockets Layer (SSL)
       requires correct time settings on the server, proxy and
       clients. For this reason, all systems must use NTP. For more
       information, see <link
       xlink:href="https://www.suse.com/documentation/sles-12/book_sle_admin/data/cha_netz_xntp.html"
       />.
      </para>
    </formalpara>
    <formalpara>
      <title>Virtual Environments</title>
      <para> The following virtual environments are supported: </para>
    </formalpara>

    <itemizedlist>
     <listitem>
      <para>
       <link xlink:href="http://www.linux-kvm.org/page/Main_Page"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <link xlink:href="http://www.vmware.com/"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <link
        xlink:href="http://www.microsoft.com/en-us/server-cloud/solutions/virtualization.aspx"
        />
      </para>
     </listitem>
    </itemizedlist>

    <para>For running &susemgrproxy; in virtual environments, use the
    following settings for the virtual machine (VM):</para>

    <itemizedlist>
      <listitem>
        <para> At least 1 GB of RAM </para>
      </listitem>
      <listitem>
        <para> Bridged network </para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 xml:id="at.manager.proxy.inst">
    <title>Installation and Setup</title>

    <para>
      The following section will guide you through the installation and
      setup procedure.
    </para>

    <important>
      <title>Registering Proxies</title>
      <para>
       &susemgr; Proxy systems are registered as traditional clients
       using a bootstrap script.  Currently there is no method to
       register proxy systems using Salt. A &susemgrproxy; can serve
       both Traditional and Salt clients.
      </para>
    </important>

    <procedure xml:id="at.manager.proxy.install.prep">
      <title>Creating Your First Proxy</title>
      <step>
       <para>
        Create an activation key based on the &sle; 12 SP2 base channel. For
        more information about activation keys, see <xref
        linkend="create.act.keys"/>.
       </para>
        <figure>
          <title>Proxy Activation Key</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="proxy-key.png" width="80%"/>
            </imageobject>
          </mediaobject>
        </figure>
      </step>
      <step>
       <para>
        Click the <guimenu>Child Channels</guimenu> subtab and select
        the &susemgr; 3.1 Proxy child channel with the matching update
        channel (<systemitem>SUSE Manager Proxy-3.1-Pool</systemitem>
        and <systemitem>SUSE-Manager-Proxy-3.1-Updates</systemitem>).
        These child channels are required for providing the proxy
        packages and updates.
       </para>
        <figure>
          <title>Base and Child Proxy Channel</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="sles12-proxy-child.png" width="80%"/>
            </imageobject>
          </mediaobject>
        </figure>

      </step>
      <step>
       <para>
        Modify a bootstrap script for the proxy.  Ensure unchecking
        <guimenu>Bootstrap using Salt</guimenu>, because in this case
        the proxy must be bootstrapped as a so-called traditional
        client.  For more information about bootstrap scripts, see <xref
        linkend="modify.bootstrap.script"/>.
       </para>
      </step>
      <step>
       <para>
        Register the client with &susemgr; using the new activation key.
       </para>
       <para>
        On &susemgr; 3.1 and later, no further action is required.  The
        bootstrap process will install and activate the proxy software
        automatically.  On the previous version 3.0 the following
        substeps are required:
       </para>
       <substeps>
        <step>
         <para>
          Once you have registered your client, direct your browser to the
          &susemgr; &webui; and login.
         </para>
        </step>

        <step>
         <para>
          Select the <guimenu>Systems</guimenu> tab and click on your
          newly registered &sle; client system from the <guimenu>Systems
          Overview</guimenu> table.
         </para>
        </step>

      <step>
       <para>
        On the system's detail page select the
        <guimenu>Software</guimenu> tab, then <guimenu>Software
        Channels</guimenu> tab.
       </para>
      </step>

      <step>
       <para>
        You will see a list of channels to which your client is already
        subscribed to. Select the two unchecked proxy channels which
        include the <systemitem>SUSE Manager Proxy-3.0-Pool</systemitem>
        and <systemitem>SUSE-Manager-Proxy-3.0-Updates</systemitem>,
        then select <guimenu>Change Subscriptions</guimenu> to
        continue. This will provide the required repositories for the
        proxy packages from the &susemgr; server to the client.
       </para>
      </step>

      <step>
        <para>Select the <guimenu>Software</guimenu>, <guimenu>Packages</guimenu> tab and then
            <guimenu>Install New Packages</guimenu>.</para>
      </step>

      <step>
        <para>Type <guimenu>patterns</guimenu> within the search field
        on the <guimenu>Installable Packages</guimenu> page. Select the
        Proxy pattern and then select <guimenu>Install Selected
        Packages</guimenu>.</para>
      </step>
      <step>
       <para>
        On the <guimenu>Confirm Package Install</guimenu> page select
        confirm to schedule the installation.
       </para>
      </step>
       </substeps>
      </step>
    </procedure>
    <para>
     The Proxy pattern will be installed and the client will be upgraded
     to a &susemgrproxy;.  Finalize the installation with running
     <command>configure-proxy.sh</command> (see <xref
     linkend="at.manager.proxy.run.confproxy"/>. Then register your
     clients against the proxy using a bootstrap script as if it were a
     &susemgr; server.  For more information, see <xref
     linkend="at.manager.proxy.register.clients"/>.
    </para>
  </sect1>

  <sect1 xml:id="at.manager.proxy.run.confproxy">
   <title>Running <command>configure-proxy.sh</command></title>
   <para>
    The <command>configure-proxy.sh</command> script will finalize the
    setup of your &susemgr; proxy.
   </para>

   <para>
    On the proxy, log in as root and execute the interactive
    <command>configure-proxy.sh</command> script; answer questions about
    &susemgr; Parent, CA Chain, Proxy version, Trace back email, Use
    SSL, HTTP Proxy, and provide input for an SSL certificate. A
    &susemgr; Parent can be either another proxy server or a &susemgr;
    server. Configuration input for monitoring follows. Next steps are
    CA password, whether to create and populate the configuration
    channel, and the credentials of the &susemgr; server (user name and
    password).
   </para>

    <para>If parts are missing, such as CA key and public certificate, the script prints commands
      that you must execute to integrate the needed files. When the mandatory files are copied,
      re-run <command>configure-proxy.sh</command>. </para>

    <para>
     <command>configure-proxy.sh</command> activates services required
     by &susemgr; Proxy, such as <systemitem>squid</systemitem>,
     <systemitem>apache2</systemitem>, and
     <systemitem>jabberd</systemitem>.
    </para>

    <para>
     To check the status of the proxy system and its clients, click the
     proxy system's details page on the &webui;
     (<menuchoice><guimenu>Systems</guimenu><guimenu>Proxy</guimenu></menuchoice>,
     then the system name). <guimenu>Connection</guimenu> and
     <guimenu>Proxy</guimenu> subtabs display the respective status
     information.
    </para>
  </sect1>

  <sect1 xml:id="at.manager.proxy.register.clients">
    <title>Registering Clients via &susemgrproxy;</title>

    <para>
     Registering clients via &susemgrproxy; is done almost the same way as registering clients
      directly with the &susemgr; server. The difference is that you create a bootstrap script on
      the &susemgrproxy; with a command-line tool. The bootstrap script then deploys all necessary
      information to the clients. The bootstrap script refers some parameters (such as activation
      keys or GPG keys) that depend on your specific setup.
    </para>

    <procedure>
      <step>
       <para>
        Create a client activation key on the &susemgr; server using the
        &webui;. See <xref linkend="create.act.keys"/>.
       </para>
      </step>
      <step>
        <para> On the proxy, execute the <command>mgr-bootstrap</command> command-line tool as
          &rootuser;. If needed, edit the resulting bootstrap script or optionally use the
          additional command-line switches to add data to your bootstrap script. To view available
          options type <command>mgr-bootstrap --help</command> from the command line: </para>
        <screen><prompt># </prompt><command>mgr-bootstrap --activation-keys=<replaceable>key-string</replaceable></command></screen>
      </step>
      <step>
       <para>
        Execute the bootstrap script on the clients as described in
        <xref linkend="connect.first.client"/>.
       </para>
      </step>
    </procedure>

    <para> The clients are registered with the &susemgrproxy; specified in the bootstrap
      script.</para>
  </sect1>

  <sect1 xml:id="advanced.topics.proxy.pxe">
   <title>Enabling PXE Boot via &susemgrproxy;</title>
   <sect2 xml:id="advanced.topics.proxy.pxe.sync">
    <title>Synchronizing Profiles and System Information</title>
    <para>
     To enable PXE boot via a proxy server, additional software must be installed and configured on both the &susemgr; server and the &susemgrproxy; server.
    </para>
    <procedure>
     <step>
      <para>
       On the &susemgr; server install <package>susemanager-tftpsync</package>:
      </para>
      <screen><prompt># </prompt><command>zypper in susemanager-tftpsync</command></screen>
     </step>
     <step>
      <para>
       On the &susemgrproxy; server install
       <package>susemanager-tftpsync-recv</package>:
      </para>
      <screen><prompt># </prompt><command>zypper in susemanager-tftpsync-recv</command></screen>
     </step>
     <step>
      <para>
       Run the <command>configure-tftpsync.sh</command> setup script and
       enter the requested information:
      </para>
      <screen><prompt># </prompt><command>configure-tftpsync.sh</command></screen>
      <para>
       It asks for hostname and IP address of the &susemgr; server and
       of the proxy itself. Additionally, it asks for the tftpboot
       directory on the proxy.
      </para>
     </step>
     <step>
      <para>
       On the &susemgr; server, run
       <command>configure-tftpsync.sh</command> to configure the upload
       to the &susemgrproxy; server:
      </para>
      <screen><prompt># </prompt><command>configure-tftpsync.sh <replaceable>FQDN_of_Proxy_Server</replaceable></command></screen>
     </step>
     <step>
      <para>
       To initiate an initial synchronization on the SUSE Manager Server
       run:
      </para>
      <screen><prompt># </prompt><command>cobbler sync</command></screen>
      <para>
       Also can also be done after each a change within Cobbler that
       needs to be synchronized immediately.  Otherwise Cobbler
       synchronization will also run automatically when needed.  For
       more information about Cobbler, see <xref
       linkend="advanced.topics.cobbler"/>.
      </para>
     </step>
    </procedure>
  </sect2>
  <sect2 xml:id="advanced.topics.proxy.pxe.dhcp">
    <title>Configuring DHCP for PXE via &susemgrproxy;</title>
    <para>
     &susemgr; is using Cobbler to provide provisioning.  PXE (tftp) is
     installed and activated by default.  To enable systems to find the
     PXE boot on the &susemgrproxy; server add the following to the DHCP
     configuration for the zone containing the systems to be provisioned:
    </para>
<screen>next-server: <replaceable>IP_Address_of_SUSE_Manager_Proxy_Server</replaceable>
filename: "pxelinux.0"</screen>

   </sect2>
  </sect1>
  <sect1 xml:id="advanced.topics.proxy.migration3">
   <title>Migrating &susemgr; 3 Proxy to Version 3.1</title>
   <para>
    The recommended order for migrations is to first migrate the server
    and then the proxies.  Note that a &susemgr; 3 Proxy cooperates just
    fine with &susemgr; 3.1.
   </para>

   <para>
    For the migration of the proxies there are two possible approaches:
    Existing &susemgr; proxies may be upgraded to version 3.1 with
    &yast; or <command>zypper</command> migration. Alternatively, the
    proxies may be replaced by new ones. This section documents both
    approaches.
   </para>

   <sect2>
    <title>Replacing a &susemgrproxy;</title>
    <para>
     A &susemgrproxy; is <literal>dumb</literal> in the sense that it
     does not contain any information about the clients which are
     connected to it. A &susemgrproxy; can therefore be replaced by a
     new one. Naturally, the replacement proxy must have the same name
     and IP address as its predecessor.
    </para>

    <procedure>
     <title>Replacing a &susemgrproxy;</title>
     <step>
      <para>
       To replace a &susemgrproxy;, delete the system from the &susemgr;
       <guimenu>Systems</guimenu> list.  For more information, see <xref
       linkend="s3-sm-system-details"/>.
      </para>
     </step>
     <step>
      <para>Shutdown the proxy and install the latest version.</para>
     </step>
     <step>
      <para>
       Complete the registration steps described in this chapter to
       register your proxy normally. Once you have completed registering
       the new proxy with the server, utilizing the appropriate
       channels, and finally having run the
       <command>configure-proxy.sh</command> script, all clients
       formally connected via the older proxy will continue operating as
       before.
      </para>
     </step>
    </procedure>
    <important>
     <title>Proxy Installation and Client Connections</title>
     <para>
      During the installation of the proxy, clients will not be able to
      reach the &susemgr; server. After a &susemgrproxy; system has been
      deleted from the systems list, all clients connected to this proxy
      will be (incorrectly) listed as <literal>directly
      connected</literal> to the &susemgr; server. After the first
      successful operation on a client <emphasis>such as execution of a
      remote command or installation of a package or patch</emphasis>
      this information will automatically be corrected. This may take a
      few hours.
     </para>
    </important>
   </sect2>
   <sect2>
    <title>Upgrading a &susemgrproxy; from 3 to 3.1</title>
    <para>
     In most situations upgrading the proxy will be your preferred
     solution as this retains all cached packages. Selecting this route
     saves time especially regarding setups with proxies connected to
     &susemgr; server via low-bandwith links. This upgrade is similar to
     a standard client migration.  The following procedures demonstrate
     this.
    </para>

    <warning>
     <title>Synchronizing Target Channels</title>
     <para>
      Before successfully initializing the product migration, you first
      must make sure that the migration target channels are completely
      mirrored.  For the upgrade to &susemgrproxy; 3.1, at least the
      <systemitem>SUSE Linux Enterprise Server 12 SP2</systemitem> base
      channel with the <systemitem>SUSE Manager Proxy 3.1</systemitem>
      for your architecture is required.
     </para>
    </warning>

   </sect2>

  </sect1>

  <sect1 xml:id="advanced.topics.proxy.migration">
    <title>Migrating &susemgr; 2.1 Proxy to Version 3</title>
    <para>
     The recommended order for migrations is to first migrate the server
     and then the proxies.  Note that a &susemgr; 2.1 Proxy cooperates
     just fine with &susemgr; 3.
    </para>

    <para>
       For the migration of the proxies there are two possible approaches: Existing &susemgr;
      proxies may be auto-upgraded to version 3 by means of &yast; auto-installation. Alternatively
      the proxies may be replaced by new ones. This section documents
      both approaches.
    </para>

    <sect2>
      <title>Replacing a &susemgrproxy;</title>
      <para>
       A &susemgrproxy; is <literal>dumb</literal> in the sense that it
       does not contain any information about the clients which are
       connected to it. A &susemgrproxy; can therefore be replaced by a
       new one. Naturally, the replacement proxy must have the same name
       and IP address as its predecessor.
      </para>

      <procedure>
        <title>Replacing a &susemgrproxy;</title>
        <step>
         <para>
          To replace a &susemgrproxy;, delete the system from the
          &susemgr; <guimenu>Systems</guimenu> list.  For more
          information, see <xref linkend="s3-sm-system-details"/>.
          </para>
        </step>
        <step>
          <para>Shutdown the proxy and install the latest version.</para>
        </step>
        <step>
         <para>
          Complete the registration steps described in this chapter to
          register your proxy normally. Once you have completed
          registering the new proxy with the server, utilizing the
          appropriate channels, and finally having run the
          <command>configure-proxy.sh</command> script, all clients
          formally connected via the older proxy will continue operating
          as before.
         </para>
        </step>
      </procedure>

      <important>
        <title>Proxy Installation and Client Connections</title>
        <para>During the installation of the proxy, clients will not be able to reach the &susemgr; server. After a &susemgrproxy; system has been deleted from the systems list,
          all clients connected to this proxy will be (incorrectly) listed as <literal>directly
            connected</literal> to the &susemgr; server. After the first successful operation on a
          client <emphasis>such as execution of a remote command or installation of a package or
            patch</emphasis> this information will automatically be corrected. Note that this may
          take a few hours.</para>
      </important>

    </sect2>

    <sect2>
      <title>Upgrading a &susemgrproxy; from 2.1 to 3</title>
      <para>In most situations upgrading the proxy will be your preferred solution as this retains
        all cached packages. Selecting this route saves time especially regarding setups with
        proxies connected to &susemgr; server via low-bandwith links. This upgrade can be
        automated by using the &yast; auto-installation feature. The following procedure demonstrates
        this.</para>
      <procedure>
       <title>Upgrading &susemgrproxy; from 2.1 to 3</title>
       <step>
        <para>
         Create an auto-installable distribution based on SLES 12
         SP2. &susemgrproxy; 3 is based on SLES 12 SP2. Refer to the
         <xref linkend="ref.webui.systems.autoinst"/> on creating and
         auto-installable distribution.
        </para>
       </step>

        <step>
         <para>
          To start the auto-installation on a proxy, some additional
          packages must be installed which are only available in the
          &susemgr; Tools channel. These tools are not available for
          proxies as the system was shipped as an appliance in the
          past. To gain access to the required packages for use with
          proxies, the underlying SLES 11 SP3 channel
          (<systemitem>SLES11-SP3-SUSE-Manager-Tools</systemitem>) needs
          to be cloned and assigned to the to-be-upgraded proxies. After
          these steps have been completed, create an auto-installation
          profile.
         </para>
        </step>
      </procedure>

      <para>In the following example you will see an auto-install profile. The label
          <literal>Proxy3</literal> is used both for the auto-installable distribution as well as
        for the auto-install profile. Use the following auto-installation as template and create the
      auto-installation profile by uploading the edited file: </para>
      <!-- Where possible, avoid lines too long!
           PDFs have fixed widths! -->
      <screen><![CDATA[<?xml version="1.0"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns"
         xmlns:config="http://www.suse.com/1.0/configns">
  <general>
  $SNIPPET('spacewalk/sles_no_signature_checks')
    <mode>
      <confirm config:type="boolean">false</confirm>
    </mode>
  </general>
  <add-on>
    <add_on_products config:type="list">
      <listentry>
        <ask_on_error config:type="boolean">true</ask_on_error>
        <media_url>http://$redhat_management_server/ks/dist/child/sles12-sp2-updates-x86_64/Proxy3</media_url>
        <name>SLES12 SP2 Updates</name>
        <product>SLES12-SP2</product>
        <product_dir>/</product_dir>
      </listentry>
      <listentry>
        <ask_on_error config:type="boolean">true</ask_on_error>
        <media_url>http://$redhat_management_server/ks/dist/child/sle-manager-tools12-pool-x86_64-sp2/Proxy3</media_url>
        <name>SLE12 Manager Tools Pool</name>
        <product>SLES12</product>
        <product_dir>/</product_dir>
      </listentry>
      <listentry>
        <ask_on_error config:type="boolean">true</ask_on_error>
        <media_url>http://$redhat_management_server/ks/dist/child/sle-manager-tools12-updates-x86_64-sp2/Proxy3</media_url>
        <name>SLE12 Manager Tools Updates</name>
        <product>SLES12</product>
        <product_dir>/</product_dir>
      </listentry>
      <listentry>
        <ask_on_error config:type="boolean">true</ask_on_error>
        <media_url>http://$redhat_management_server/ks/dist/child/suse-manager-proxy-3.0-pool-x86_64/Proxy3</media_url>
        <name>SLE12 Proxy 3 Pool</name>
        <product>SLES12</product>
        <product_dir>/</product_dir>
      </listentry>
      <listentry>
        <ask_on_error config:type="boolean">true</ask_on_error>
        <media_url>http://$redhat_management_server/ks/dist/child/suse-manager-proxy-3.0-updates-x86_64/Proxy3</media_url>
        <name>SLE12 Proxy 3 Update</name>
        <product>SLES12</product>
        <product_dir>/</product_dir>
      </listentry>
    </add_on_products>
  </add-on>
  <upgrade>
    <only_installed_packages config:type="boolean">false</only_installed_packages>
    <stop_on_solver_conflict config:type="boolean">true</stop_on_solver_conflict>
  </upgrade>
  <backup>
    <sysconfig config:type="boolean">true</sysconfig>
    <modified config:type="boolean">true</modified>
    <remove_old config:type="boolean">false</remove_old>
  </backup>
  <networking>
    <keep_install_network config:type="boolean">true</keep_install_network>
    <start_immediately config:type="boolean">true</start_immediately>
  </networking>
  <scripts>
    <pre-scripts config:type="list">
      <script>
        <filename>remove_initrd_koan.sh</filename>
        <source>

        mount /dev/sda1 /mnt
        rm -f /mnt/initrd_koan
        umount /mnt

        </source>
      </script>
    </pre-scripts>
    <init-scripts config:type="list">
      <script>
        <filename>sles_register.sh</filename>
        <source>

         $SNIPPET('spacewalk/sles_register')
         chmod 640 /etc/sysconfig/rhn/systemid
         chown root:www /etc/sysconfig/rhn/systemid
         systemctl enable squid
         systemctl start squid

        </source>
      </script>
    </init-scripts>
  </scripts>
</profile>]]></screen>

      <para>Ensure all channels referenced in this file are available and fully synced. Replace the
        label <literal>Proxy3</literal> with the correct reference chosen for your auto-installation
        profile. It is recommended to create a new activation key, for example:
          <literal>1-sles12sp2</literal> which has the relevant channels assigned; later this key
        will be used to subscribe the upgraded proxy with the correct channels. The following base
        channel should be assigned:</para>

      <screen>SLES12-SP2-Pool</screen>

      <para>Also include the following child channels:</para>

      <screen>SLE-Manager-Tools12-Pool
SLE-Manager-Tools12-Updates
SLES12-SP2-Updates
SUSE-Manager-Proxy-3.0-Pool
SUSE-Manager-Proxy-3.0-Updates</screen>

      <para>In <literal>Kernel Options</literal> enter the following value:</para>

      <screen>autoupgrade=1 Y2DEBUG=1</screen>

      <para>The debug setting is not required but can help investigate problems in case something
        goes wrong; the <parameter class="option">autoupgrade</parameter> parameter is vital! Do not
        remove it. </para>

      <para>Save your changes then click on "Variables" and enter the following value:</para>

      <screen>registration_key=1-sles12sp2</screen>

      <para>
       Specify the name of the key which has all respective channels
       assigned to it. The auto-install file contains a script named
       <command>remove_initrd_koan.sh</command>.  In this script you
       should specify the device name of your <filename>/boot</filename>
       partition.
      </para>

      <note>
        <title>remove_initrd_koan.sh</title>
        <para>The purpose of this script is to act as a workaround for the following problem: During
          installation the initrd of the installation media (SLES12SP2) is in use. This initrd is
          rather large (around 50 MB), so there is not enough space left when the new kernel is
          being installed. Therefore this script deletes the initial ramdisk file once it has been
          booted. The partition of your boot partition might differ, so it should be explicitly
          specified in the autoinstall file.</para>
      </note>

      <para>During auto-installation this script attempts to delete the initial ramdisk file once it
        has booted. Your boot partition may differ, so ensure it is explicitly specified within the
        auto-install file.</para>

      <para>If this step is bypassed or mixed up (for example: specifying a wrong value) it's fine.
        During installation of the new kernel, &yast; will detect that there is not enough space
        available and will stop. You may switch to another console (there is a shell running on
        virtual console 2 and reclaim some disk space by issuing the following command:</para>

      <screen>rm /mnt/boot/initrd_koan</screen>

      <para>
       When you have completed this step, switch back to the console where &yast; is running
        (console 7) and click <guimenu>Retry</guimenu>. Installation of the kernel will continue and succeed. The
        system will reboot, a few automated init scripts will run and the proxy will be upgraded to
        the &susemgr; 3 based on SLES12SP2 and will be fully functional.</para>

    </sect2>

  </sect1>



</chapter>
