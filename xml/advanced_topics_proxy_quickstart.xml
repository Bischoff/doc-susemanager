<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
                 type="text/xml" 
                 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="advanced.topics.proxy.quickstart">
 <title>&mgrproxyquick;</title>
 <subtitle>&susemgr; Proxy &productnumber3;</subtitle>


 <para> &susemgrreg; Proxy is a &susemgr; add-on and caches software packages on an internal,
  central server. The proxy caches patch updates from &suse; or custom RPMs generated by third-party
  organizations. A proxy allows you to use bandwidth more effectively because client systems connect
  to the proxy for updates, and the &susemgr; server is no longer required to handle all client
  requests. The proxy also supports transparent custom package deployment. </para>

 <para> This guide explains how to install and set up &susemgrproxy;. </para>

 <!-- ==================================================================== -->
 <sect1 xml:id="sec.manager.proxy.concepts">
  <title>Conceptual Overview</title>

  <para> &susemgr; Proxy is an open source (GPLv2) solution that provides the following features: </para>

  <itemizedlist>
   <listitem>
    <para> Cache software packages within a Squid proxy. </para>
   </listitem>
   <listitem>
    <para> Client systems see the &susemgrproxy; as a &susemgr; server instance. </para>
   </listitem>
   <listitem>
    <para> The &susemgrproxy; is registered as a client system with the &susemgr; server. </para>
   </listitem>
  </itemizedlist>

  <para> A &susemgr; Proxy's primary goal is to improve &susemgr; performance by reducing bandwidth
   requirements and accelerating response time. </para>
 </sect1>
 <!-- ==================================================================== -->
 <sect1 xml:id="sec.manager.proxy.requirements">
  <title>System Requirements</title>
  <para> The following section informs you about the system requirements. For supported clients and
   their requirements, see: <link linkend="mgr.supported.client.systems">Supported Client
    Systems</link>
   
  </para>
<sect2 xml:id="sec.manager.proxy.requirements.hardware">
   <title>Hardware Requirements</title>
   <para> Hardware requirements highly depend on your usage scenario. When planning proxy
    environments, consider the amount of data you wamt to cache on your proxy. If your proxy should
    be a 1:1 mirror of your &susemgr;, the same amount of disk space is required. </para>
   <variablelist>
    <varlistentry>
     <term>CPU</term>
     <listitem>
      <para> Required: a multi-core 64bit CPU (x86_64). </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>RAM</term>
     <listitem>
      <para> Required: 4 GB when only managing a few client systems. </para>
      <para> Recommended for production use: 16&nbsp;GB. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Free Disk Space</term>
     <listitem>
      <para> Required: 40&nbsp;GB for base installation. </para>
      <para> Additionally at least 25&nbsp;GB for caching per distribution or channel; resizable
       partition strongly recommended. </para>
     </listitem>
    </varlistentry>
   </variablelist>

  </sect2>

  <sect2 xml:id="sec.manager.proxy.requirements.other">
   <title>Other Requirements</title>
   <important>
    <title>Network Setup</title>
    <para> For correct installation and setup of &susemgrproxy;, make sure the following
     requirements are fulfilled: </para>
    <variablelist>

     <varlistentry>
      <term>Hostname and IP Address</term>
      <listitem>
       <para> To guarantee that &susemgrproxy;'s domain name can be resolved by its clients, the
        proxy and the client machines must be connected to a working Domain Name Server (DNS) server
        in the network. </para>
       <para> The hostname of the &susemgrproxy; server must not contain uppercase letters as this
        might cause the <systemitem class="daemon">jabberd</systemitem> messaging daemon to fail.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </important>
   <variablelist>
    <varlistentry>
     <term>&scc;</term>
     <listitem>
      <para> For using &susemgrproxy;, you need an account at the &scc; (SCC) where your purchased
       products and product subscriptions are registered. Make sure you have the following
       subscriptions: </para>
      <itemizedlist>
       <listitem>
        <para> One or more subscriptions for &susemgrproxy;. </para>
       </listitem>
       <listitem>
        <para> One or more subscriptions for &susemgr;. </para>
       </listitem>
       <listitem>
        <para> Subscriptions for the products on the client systems you want to register with
         &susemgr; via &susemgrproxy;. </para>
       </listitem>
       <listitem>
        <para> Subscriptions to client entitlements for the client system you want to register with
         &susemgr; via &susemgrproxy;. </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Network Time Protocol (NTP)</term>
     <listitem>
      <para> The connection to the Web server via Secure Sockets Layer (SSL) requires correct time
       settings on the server, proxy and clients. For this reason, all systems must use NTP. </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="vle.manager.proxy.req.virt">
     <term>Virtual Environments</term>
     <listitem>
      <para> For running &susemgrproxy; in virtual environments, use the following settings for the
       virtual machine (VM): </para>
      <itemizedlist>
       <listitem>
        <para> At least 1 GB of RAM </para>
       </listitem>
       <listitem>
        <para> Bridged network </para>
       </listitem>
      </itemizedlist>
      <para> The following virtual environments are supported: </para>
      <itemizedlist>
       <listitem>
        <para> &kvm; </para>
       </listitem>
       <listitem>
        <para> &vmware; </para>
       </listitem>
       <listitem>
        <para> Hyper-V </para>
       </listitem>
      </itemizedlist>
      <!-- remove xen: bnc#786341 -->
      <para> For running &susemgrproxy; in &kvm;, &vmware;, or Hyper-V, use the &susemgrproxy; ISO
       image. </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.manager.proxy.inst">
  <title>Installation and Setup</title>

  <para> &susemgrproxy; is an application combined with an operating system (appliance). It can be
   deployed on industry hardware or in a virtual environment. </para>

  <para> If &susemgrproxy; is registered with a &susemgr; instance, it will receive updates directly
   from the configured &susemgr; channel. </para>

  <para> The &yast; graphical user interface will guide you through the installation and the setup
   process. It is started in text mode. Use the <keycap function="tab"/> key to navigate among
   individual elements. To select a value from a list, use the <keycap function="up"/> and <keycap
    function="down"/> arrow keys and press <keycap function="enter"/>. To activate an option, press
   the <keycap function="space"/> key. </para>

  <sect2 xml:id="sec.manager.proxy.inst.installation">
   <title>Installation</title>
   <para> The following procedure describes the installation on a physical machine. Make sure the
    machine you intend to use fulfills the <xref linkend="sec.manager.proxy.requirements.hardware"
     xrefstyle="select:    quotedtitle page"/>. If you want to install the appliance in a virtual
    machine, additionally check the settings listed in
    <!-- <xref linkend="vle.manager.req.virt" xrefstyle="select: quotedtitle page"/> ADD LINK! -->. </para>
   <procedure xml:id="pro.manager.proxy.installation">
    <title>Installing the Appliance</title>
    <warning>
     <title>Loss of Data</title>
     <para> Installing &susemgrproxy; on a physical machine will completely erase any data on the
      hard disk used for installation. Before you start the installation process, create a backup of
      your hard disks. </para>
    </warning>
    <step>
     <para> Boot your future &susemgrproxy; server from the installation medium. Select
       <guimenu>Install/Restore &susemgrproxy;</guimenu>. </para>
    </step>
    <step>
     <para> If your machine contains more than one hard disk, you are asked which one to use for the
      installation of &susemgrproxy;. Navigate with the arrow keys, and use the space key to mark
      the desired hard disk. You are asked if you want to continue and you are warned that the
      installation will destroy all data on the disk. </para>
    </step>
    <step>
     <para> To proceed, answer with <guimenu>Yes</guimenu>. The deployment process takes over. This
      step may take some time as large amounts of data need to be unpacked and verified. After the
      verification, &yast; firstboot is started. </para>
    </step>
    <step>
     <para> In the first screen, set the system <guimenu>Language</guimenu> and <guimenu>Keyboard
       Layout</guimenu> for your future &susemgrproxy;. Proceed with <guimenu>Next</guimenu>.
     </para>
    </step>
    <step xml:id="step.manager.proxy.install.root.pwd">
     <para> In the next screen, set the &rootuser; password for your &susemgrproxy; server and
      confirm it. </para>
     <!-- General screen, no proxy customization, thus no new screenshot needed.
     Reuse SM screenshot
-->
     <figure>
      <title>&yast; Firstboot&mdash;Password for the System Administrator</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="susemanager_firstboot_root_pwd.png" width="85%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="susemanager_firstboot_root_pwd.png" width="75%"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para> Proceed with <guimenu>Next</guimenu>. </para>
    </step>
    <step>
     <para> In the following screen, read the licenses and agree to them. Proceed with
       <guimenu>Next</guimenu>. The installation routine checks some basic system requirements and
      depending on the results, lets you decide whether to proceed with the installation or cancel.
     </para>
    </step>
    <step>
     <para> In the next screen, configure the network settings. Note the network requirements listed
      in <xref linkend="sec.manager.proxy.requirements.other"/>. Either choose <guimenu>Use
       Following Configuration</guimenu> or <guimenu>Change</guimenu> to modify the network setup
      according to your wishes. </para>
     <!-- General screen.  no special figure with proxy needed -->
     <figure>
      <title>&yast; Firstboot&mdash; Network Configuration</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="susemanager_firstboot_network.png" width="90%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="susemanager_firstboot_network.png" width="75%"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para> Proceed with <guimenu>Next</guimenu>. </para>
    </step>
    <step>
     <para> Configure the <guimenu>Clock and Time Zone</guimenu> to use for your &susemgr; server.
      Proceed with <guimenu>Next</guimenu>. </para>
    </step>
    <step>
     <para> Configure the NTP settings according to your wishes. For more information about the
      options, refer to <guimenu>Help</guimenu>. Note the NTP requirements listed in <xref
       linkend="sec.manager.proxy.requirements.other"/>. Proceed with <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para> On the <guimenu>Installation Completed</guimenu> screen, select
       <guimenu>Finish</guimenu> to close &yast; firstboot. The boot process continues. </para>
    </step>
    <step>
     <para> Wait for the boot process to finish.
      <!--When the login prompt appears on
    the console, write down the hostname listed there&mdash;you will need it to
    access the &susemgr; Web interface later. -->
     </para>
     <remark role="needinfo"> 2011-03-11 - ke: Do we need an online update after the installation? </remark>
     <!-- FIXME: see remark
    <important>
     <title>&susemgrproxy; Update Required</title>
     <para>
      After installation, update your &susemgrproxy; to apply the latest
      patches before starting the setup process. To receive updates,
      registration at NCC (or a connection to an internal update server like
      &smt;) is required. For details on how to execute the update, refer to
      <xref linkend="pup-sle"/>.
     </para>
    </important>
-->
    </step>
   </procedure>
  </sect2>

  <!-- FIXME: Enable parts that make sense here -->

  <sect2 xml:id="sec.manager.proxy.inst.setup">
   <title>Setup</title>
   <remark role="generic"> 2011-03-10 - ke: This needs close checking. Thus far just copied from QS </remark>
   <para>
    <!-- updating &susemgrproxy; server also required?  see QS server--> After running &yast;
    firstboot, log in as &rootuser;, register &susemgrproxy; with &susemgr;, then run the
     <command>configure-proxy.sh</command> setup script from the command-line. See the following
    sections for the details of this process: </para>
   <sect3 xml:id="sec.manager.proxy.inst.setup.reg">
    <title>Registering with &susemgr;</title>
    <para> Registering &susemgrproxy; with &susemgr; is done with a bootstrap script that deploys
     all necessary information to the proxy. The bootstrap script refers some parameters like
     activation keys or GNU Privacy Guard (GPG ) keys that depend on your particular setup. </para>
    <procedure xml:id="pro.manager.proxy.activationkey">
     <title>Creating Activation Keys</title>
     <para> Activation keys define entitlements and which channels and groups the client system is
      allowed to subscribe to. This information is passed on to all systems registered with a key.
      Each activation key is bound to the organization for which it has been created. </para>
     <note>
      <title>Activation Keys for New Organizations</title>
      <para> If you need to create activation keys for a new organization, assign system
       entitlements first. For details, refer to
       <!-- <xref linkend="pro.manager.config.entitlements"/> and
       <xref linkend="sec.manager.config.organizations"/>.ADD LINKS!-->
       The default organization has all necessary prerequisites by default. </para>
     </note>
     <step>
      <para> Log in to the &susemgr; Web interface as administrator. </para>
     </step>
     <step>
      <para> Switch to the <guimenu>Systems</guimenu> tab and select <menuchoice>
        <guimenu>Activation Keys</guimenu>
       </menuchoice>. </para>
     </step>
     <step>
      <para> Click the <guimenu>Create New Key</guimenu> link at the upper right corner. </para>
     </step>
     <step>
      <para> Enter a <guimenu>Description</guimenu> to identify the generated activation key.
      </para>
     </step>
     <step>
      <para> If you want the key to be generated automatically, leave the <guimenu>Key</guimenu>
       input field empty. If you want to use a certain string for the key, define the desired string
       in the <guimenu>Key</guimenu> input field. </para>
      <warning>
       <title>Allowed Characters</title>
       <para> Do not use commas within the key string. All other characters are allowed. Commas are
        used as separators when registering client systems with multiple activation keys with
         <command>rhnreg_ks</command>. </para>
      </warning>
     </step>
     <step>
      <para> To restrict the number of client systems that can be registered with the activation
       key, set a <guimenu>Usage Limit</guimenu> by entering a maximum number of systems. </para>
      <para> For unlimited use, leave this field empty. </para>
     </step>
     <step>
      <para> With <guimenu>Base Channels</guimenu>, set the primary channel for the key. This can be
       either the <literal>SUSE Manager Default</literal> channel or a custom base channel.
       Additionally, add the Proxy channel to the list. </para>
      <para> Choosing <literal>&susemgr; Default</literal> allows proxy systems to register with the
       default &suse;-provided channel that corresponds to their installed version of &sle;. </para>
     </step>
     <step>
      <para> Activate the <guimenu>Add-On Entitlements</guimenu> you want to grant to the proxy
       systems registered with that key. Activate at least <guimenu>Provisioning</guimenu>, which is
       a requirement for the proxy systems. </para>
     </step>
     <step>
      <para> If any newly registered proxy systems of your organization should inherit the
       properties of this key, activate the <guimenu>Universal Default</guimenu> checkbox. Only one
       universal default activation key can be defined per organization. </para>
      <warning>
       <title>Changing the Default Activation Key</title>
       <para> Only one universal default activation key can be defined per organization. If some
        other key is already the default activation key for your organization, this check box will
        automatically unset the check box for that other key. </para>
      </warning>
     </step>
     <step>
      <para> Generate the key by clicking <guimenu>Create Activation Key</guimenu>. The prefix of
       the activation key indicates which organization (by ID number) owns the activation.</para>
     </step>
    </procedure>
    <?dbfo-need height="20em"?>
    <figure>
     <title>Example Activation Key</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="susemanager_create_activation_key_proxy.png" width="95%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="susemanager_create_activation_key_proxy.png" width="75%"/>
      </imageobject>
     </mediaobject>
    </figure>
    <note>
     <title>Activation Key Update</title>
     <para> After modifying or adding any components that are bound to an existing activation key
      (for example adding channels), make sure to update the key under <menuchoice>
       <guimenu>Systems</guimenu>
       <guimenu>Activation Keys</guimenu>
       <guimenu>KEY_TO_MODIFY</guimenu>
       <guimenu>Update Activation Key</guimenu>
      </menuchoice>. <remark>2014-03-31 froh: why is this not automatic??</remark>
     </para>
    </note>
    <para> The next steps are to generate the <filename>bootstrap.sh</filename> script on the
     &susemgr; server, then edit a copy of the script and run the modified script on each proxy
     machine that you want to register with &susemgr;. </para>
    <procedure xml:id="pro.manager.proxy.generate.bootstrap">
     <title>Generating the Bootstrap Script</title>
     <para> Several options in the bootstrap script can be set via the &susemgr; Web interface, for
      example, if remote command execution or remote configuration of proxy systems should be
      allowed. </para>
     <step>
      <para> On the &susemgr; Web interface, switch to the <guimenu>Admin</guimenu> tab and select <menuchoice>
        <guimenu>SUSE Manager Configuration</guimenu>
        <guimenu>Bootstrap Script</guimenu>
       </menuchoice>. </para>
     </step>
     <step xml:id="step.manager.proxy.bootstrap.options">
      <para> Check the options listed on the page and activate or deactivate them according to your
       needs. </para>
      <note>
       <title>Remote Command Execution and Configuration</title>
       <para> If you choose to <guimenu>Enable Remote Configuration</guimenu> or <guimenu>Enable
         Remote Commands</guimenu>, make sure that the <systemitem>rhncfg-actions</systemitem>
        package is installed on the proxy systems: </para>
       <orderedlist>
        <listitem>
         <para> Switch to the <guimenu>Systems</guimenu> tab and select <menuchoice>
           <guimenu>Activation Keys</guimenu>
          </menuchoice>. </para>
        </listitem>
        <listitem>
         <para> From the list of activation keys, click the one you want to modify. </para>
        </listitem>
        <listitem>
         <para> Click the <guimenu>Packages</guimenu> subtab, enter
           <systemitem>rhncfg-actions</systemitem> into the input field and click <guimenu>Update
           Key</guimenu>. </para>
        </listitem>
       </orderedlist>
       <para> The required package for remote command execution and configuration will automatically
        be installed on all systems registered with the respective activation key. </para>
      </note>
     </step>
     <step xml:id="step.manager.proxy.create.bootstrap">
      <para> Click the <guimenu>Update</guimenu> button. The necessary bootstrap script is generated
       and stored on the server's file system in the
        <filename>/srv/www/htdocs/pub/bootstrap</filename> directory. It is also available from
        <filename>https://susemanager.example.com/pub/bootstrap/</filename>. </para>
     </step>
     <step>
      <para> Proceed with the following procedure, <xref linkend="pro.manager.proxy.register"/>.
      </para>
     </step>
    </procedure>
    <procedure xml:id="pro.manager.proxy.register">
     <title>Editing the Bootstrap Script and Registering Proxy Systems</title>
     <para> Adjust the generated bootstrap script according to your needs. The minimal requirement
      is to include the activation key. We strongly recommend to also include one or more GPG keys
      (for example, your organization key, and package signing keys). Then execute the resulting
      script on each proxy system that you want to register with &susemgr; (either centrally from
      the &susemgr; server or decentralized on each system.) </para>
     <!-- According to Duncan: not required -->
     <!--
   <note>
    <title>Access to Installation Media During Registration</title>
    <para>
     The bootstrap process triggers installation of packages on the proxy
     client machines. Before executing the bootstrap script on a proxy client,
     make sure the client can access its default installation medium: network
     access (in case of network repositories) or inserted DVD (in case of
     physical media).
    </para>
   </note>
     -->
     <step>
      <para> Log in as &rootuser; to the &susemgr; server. </para>
     </step>
     <step>
      <para> Create a copy of the automatically generated script: </para>
      <screen><?dbsuse-fo font-size="0.85em"?>cd /srv/www/htdocs/pub/bootstrap
cp bootstrap.sh bootstrap-<replaceable>edited</replaceable>.sh</screen>
     </step>
     <step>
      <para> Edit the copy as follows: </para>
      <substeps>
       <step>
        <para> Search for the <varname>ACTIVATION_KEYS</varname> entry and enter the activation key
         from <xref linkend="pro.manager.proxy.activationkey"/>. Make sure to also include the
         organization prefix in the key, for example: </para>
        <screen><?dbsuse-fo font-size="0.85em"?>ACTIVATION_KEYS=1-fef154ddcf0d515fc</screen>
       </step>
       <step>
        <para> Search for the <literal>ORG_GPG_KEY</literal> entry and enter one or more
          <remark>froh 2014-04-24: same as
          manager_quick_config_i.xml:pro.manager.clients.register?</remark> GPG keys. Multiple keys
         must be entered as a comma-separated list. </para>
       </step>
       <step>
        <para> Adjust further parameters, if needed. For details, refer to the comments in
          <filename>bootstrap.sh</filename>. </para>
       </step>
       <step>
        <para> To enable the script for execution, remove the <literal>exit 1</literal> entry from
         the message block. The last lines of the message block should now read: </para>
        <screen>echo "the exit below)"
echo</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para> Save the edited version of the script. </para>
     </step>
     <step>
      <para> Use one of the following possibilities to execute the edited script on all proxy
       machines that you want to register with &susemgr;: </para>
      <itemizedlist>
       <listitem>
        <para> Log in as &rootuser; on the &susemgr; server and execute the following commands: </para>
        <screen>cd /srv/www/htdocs/pub/bootstrap/
cat bootstrap-<replaceable>edited</replaceable>.sh | ssh \
root@<replaceable>client_hostname</replaceable> /bin/bash</screen>
       </listitem>
       <listitem>
        <para> Log in to each proxy client system and execute the following command (all on one
         line): </para>
        <screen><?dbsuse-fo font-size="0.85em"?>curl -Sks https://<replaceable>server_hostname</replaceable>/pub
/bootstrap/bootstrap-<replaceable>edited</replaceable>.sh | /bin/bash</screen>
       </listitem>
      </itemizedlist>
      <para> The proxy clients are registered with the &susemgr; server as specified in the
       bootstrap script. The &susemgr; Web interface shows the registered proxies as client systems
       on the <guimenu>Systems</guimenu> tab. </para>
     </step>
    </procedure>
    <remark>froh 2014-04-24: sync with manager_quick_config_i.xml?</remark>
    <note>
     <title>Missing <filename>repodata/repomd.xml</filename></title>
     <para> If the bootstrap script warns about missing <filename>repodata/repomd.xml</filename>,
      channel synchronizing is still running. Registration will succeed nevertheless, and thus
      package or patch updates will happen later as configured. </para>
     <para> To be on the save side, check on the Web interface when <guimenu>Repo Cache
       Status</guimenu> is <literal>Completed</literal>: Click <guimenu>Channels</guimenu>, then the
       <replaceable>Channel Name</replaceable> to see the <guimenu>Details</guimenu> page. Here you
      can check basic details, manager accounts, available patches and packages, as well as
      subscribed systems. </para>
    </note>
   </sect3>
   <sect3 xml:id="sec.manager.proxy.inst.config">
    <title>Running <command>configure-proxy.sh</command></title>
    <para> On the proxy, log in as &rootuser; and execute the interactive
      <command>configure-proxy.sh</command> script; answer questions about &susemgr; Parent, CA
     Chain, Proxy version, Trace back email, Use SSL, HTTP Proxy, and provide input for an SSL
     certificate. A &susemgr; Parent can be either another proxy server or a &susemgr; server.
     Configuration input for monitoring follows. Next steps are CA password, whether to create and
     populate the configuration channel, and the credentials of the &susemgr; server (user name and
     password). </para>
    <para> If parts are missing, such as CA key and public certificate, the script prints commands
     that you must execute to integrate the needed files. When the mandatory files are copied,
     re-run <command>configure-proxy.sh</command>. </para>
    <para> In the end, <command>configure-proxy.sh</command> activates services required by
     &susemgrproxy;, such as <systemitem>squid</systemitem>, <systemitem>apache2</systemitem>, and
      <systemitem>jabberd</systemitem>. </para>
    <para> To check the status of the proxy system and its clients, click the proxy system's details
     page on the Web interface (<menuchoice>
      <guimenu>Systems</guimenu>
      <guimenu>Proxy</guimenu>
     </menuchoice>, then the system name). <guimenu>Connection</guimenu> and
      <guimenu>Proxy</guimenu> subtabs display the respective status information. </para>
   </sect3>
  </sect2>
 </sect1>
 <!-- ============================================================ -->
 <sect1 xml:id="sec.manager.proxy.migrating">
  <title>Migrating &susemgrproxy; 1.7 to &susemgrproxy; 2.1</title>
  <remark role="needinfo">emap: changed product versions. I assume content about ext4dev-kmp-default
   is no longer valid. Please confirm before I remove it. Section on jabberd still valid?</remark>
  <para> Registered &susemgrproxy; servers can be migrated as any other registered &susemgr; client
   system as described in <!-- <xref
   linkend="ch-sp-migration"/>. ADD Link!-->
  </para>

  <note>
   <title>Removing Package ext4dev-kmp-default</title>
   <remark role="needinfo">emap: Drop for 2.1 or not?</remark>
   <para> If the package <systemitem>ext4dev-kmp-default</systemitem> is installed on your proxy
    system, it has to be removed before the migration is triggered to successfully migrate a
    &susemgrproxy; from 1.2 to 1.7. Otherwise the migration will fail because there is no update
    candidate for this package available in SP2. To remove the package using SUSE Manager, proceed
    as follows: </para>

   <!-- <procedure> does not exist within <note> -->
   <itemizedlist>
    <listitem>
     <para> Select the proxy system and then click <menuchoice>
       <guimenu>Software</guimenu>
       <guimenu>Packages</guimenu>
       <guimenu>List/Remove</guimenu>
      </menuchoice>. </para>
    </listitem>
    <listitem>
     <para> Find <systemitem>ext4dev-kmp-default</systemitem> in the list of removable packages.
     </para>
    </listitem>
    <listitem>
     <para> Mark the check box, click <guimenu>Remove Packages</guimenu> and confirm the package
      removal. </para>
    </listitem>
   </itemizedlist>
  </note>

  <figure>
   <title>&susemgrproxy; Migration</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="proxy-migration.png" width="95%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="proxy-migration.png" width="75%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <warning>
   <title>jabberd Not Running</title>
   <para> After migrating a &susemgrproxy; <command>jabberd</command> might not be running and
     <quote>jabberd/sm[2490]: db: couldn't open storage db: Invalid argument</quote> will be logged
    in <filename>/var/log/messages</filename>. </para>
   <para> To fix this issue, run: </para>

   <screen>rcjabberd stop
rm -f /var/lib/jabberd/db/*
rcjabberd start</screen>
  </warning>
 </sect1>
 <!-- ============================================================ -->
 <sect1>
  <title>Registering Clients via &susemgrproxy;</title>

  <para> Registering clients via &susemgrproxy; is done almost the same way as registering clients
   directly with the &susemgr; server. The difference is that you create a bootstrap script on the
   &susemgrproxy; with a command-line tool. The bootstrap script then deploys all necessary
   information to the clients. The bootstrap script refers some parameters (such as activation keys
   or GPG keys) that depend on your specific setup. For background information, see the
   &mgrclientconfguide;. </para>

  <procedure>
   <step>
    <para> Create the client activation key on the &susemgr; server using the Web interface as
     explained in <!--  <xref linkend="sec.manager.config.setup.client"/> ADD LINK!-->. </para>
   </step>
   <step>
    <para> On the proxy, execute the <command>mgr-bootstrap</command> command-line tool as
     &rootuser;. If needed, either edit the resulting bootstrap script or use additional
     command-line switches such as <literal>--activation-keys</literal>: </para>
    <screen>mgr-bootstrap \
  --activation-keys=<replaceable>key-string</replaceable></screen>
   </step>
   <step>
    <para> Execute the bootstrap script on the clients as described in
     <!--<xref linkend="pro.manager.clients.register"/> ADD LINK!--> or above for the proxy systems
     in <xref linkend="pro.manager.proxy.register"/>. </para>
   </step>
  </procedure>

  <para> The clients are registered with the &susemgrproxy; specified in the bootstrap script. To
   check the status of the proxy connected client system, click the client system's details page on
   the &susemgr; Web interface (<menuchoice>
    <guimenu>Systems</guimenu>
   </menuchoice>, then select the system name). The <guimenu>Connection</guimenu> subtab displays
   the connection path to the client. </para>

  <para> For more information about bootstrapping, refer to
   <!--<xref linkend="ch-bootstrap"/>   ADD THIS LINK TO BOOTSTRAP SECTION OF QUICKSTART-->
  </para>
 </sect1>
 <!-- ============================================================ -->
 <sect1 xml:id="ap.proxy.docupdate">
  <title>Documentation Updates</title>
  <para>This section contains information about documentation content changes made to the
    <citetitle>&mgrproxyquick;</citetitle>. <!-- since the initial release of &susemgr; XX.-->
  </para>
  <para>This document was updated on the following dates:</para>
  <itemizedlist role="subtoc">
   <listitem>
    <para><xref linkend="ap-proxy.docupdate.2014-04-21" xrefstyle="SectTitleOnPage"/></para>
   </listitem>
   <listitem>
    <para><xref linkend="ap-proxy.docupdate.2013-01-25" xrefstyle="SectTitleOnPage"/></para>
   </listitem>
   <listitem>
    <para><xref linkend="ap-proxy.docupdate.2012-11-28" xrefstyle="SectTitleOnPage"/></para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="ap-proxy.docupdate.2014-04-21">
   <title>April 21, 2014</title>
   <para>Updates were made to the following sections. The changes are explained below.</para>

   <variablelist>
    <varlistentry>
     <term><xref linkend="sec.manager.proxy.requirements.hardware" xrefstyle="SectTitleOnPage"
      /></term>
     <listitem>
      <para> Adjusted requirements. </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>


  <sect2 xml:id="ap-proxy.docupdate.2013-01-25">
   <!-- FIXME: enter date -->
   <title>January 25, 2013</title>
   <para>Updates were made to the following sections. The changes are explained below.</para>

   <variablelist>
    <varlistentry>
     <term><xref linkend="sec.manager.proxy.requirements.other" xrefstyle="SectTitleOnPage"/></term>
     <listitem>
      <para> Xen no longer is a supported virtual environment. </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="ap-proxy.docupdate.2012-11-28">
   <!-- FIXME: enter date -->
   <title>November 28, 2012</title>
   <para>Updates were made to the following sections. The changes are explained below.</para>

   <variablelist>
    <varlistentry>
     <term><xref linkend="sec.manager.proxy.migrating" xrefstyle="SectTitleOnPage"/></term>
     <listitem>
      <para> This section is new. </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>

</chapter>
