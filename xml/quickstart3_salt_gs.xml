<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
                 type="text/xml" 
                 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="quickstart.salt.gs">

    <title>Salt Getting Started</title>


    <sect1>
        <title>Introduction</title>
        <para> This chapter provides an introduction to using the new Salt features added in
            &susemgr;Â 3. This chapter assumes you have completed all former sections within the
            &mgrgetstart;. <remark>Add links to onboarding salt minions from former
                sections.</remark> You should have a running &susemgr; server and at least two
            on-boarded Salt minions to complete the sections of this chapter. If you find yourself
            stuck at any point refer to the <citetitle>SaltStack Get Started</citetitle> tutorial
            located at <link
                xlink:href="https://docs.saltstack.com/en/getstarted/fundamentals/index.html"/>. </para>

        <tip>
            <title>Use More than One Minion</title>
            <para>Connecting two or more minions during your testing is considered best practice.
                Using two or more minions will allow you to target individual systems using Salt and
                experiment with the power of its targeting features.</para>
        </tip>

        <para> This guide does not attempt to cover all that Salt has to offer. This guide is a
            primer for using Salt with &susemgr;. For comprehensive Salt documentation, see <link
                xlink:href="https://docs.saltstack.com/en/latest/contents.html"/>. </para>
    </sect1>

    <sect1>
        <title>Basic Salt Commands</title>
        <para>In the following section you will view and test several basic Salt commands. You will
            also test Salt in master-less mode.</para>
        <tip>
            <title>Terminology: Master</title>
            <para>This guide uses the term Master. Master is used interchangeably with the SUSE
                manager server. </para>
        </tip>

        <sect2>
            <title>Salt test.ping</title>
            <procedure>
                <step>
                    <para>In a terminal on the Salt master run the following command as root:</para>
                    <screen># salt-key</screen>
                    <para>The <command>salt-key</command> command lists all
                            <emphasis>Accepted/Denied/Unaccepted/Rejected</emphasis> minion names.
                        If you have added minions via the SUSE manager on-boarding page you will see
                        those minions listed here. You can target a minion based on the listed
                        name.</para>
                </step>
                <step>
                    <para>Send a <command>test.ping</command> to a minion with the following Salt
                        command:</para>
                    <screen># salt minion_name test.ping</screen>
                    <para>If the accepted minion is running it will return
                        <command>True</command>.</para>
                    <tip>
                        <title>Salt Command Format</title>
                        <para>The format of a Salt command is:</para>
                        <screen>command [options] '&lt;target>' &lt;function> [arguments]</screen>
                    </tip>
                </step>
            </procedure>
        </sect2>

        <sect2>
            <title>Explore Available Functions in the Test Module</title>
            <procedure>
                <step>
                    <para>You can use <command>sys.list_functions</command> to print a list of all
                        available functions in a Salt module. For example call <command>salt
                            minion_name sys.list_functions test</command> to see all functions in
                        the test module:</para>
                    <screen># salt minion_name sys.list_functions test
minion_name:
    - test.arg
    - test.arg_repr
    - test.arg_type
    - test.assertion
    - test.attr_call
    - test.collatz
    - test.conf_test
    - test.cross_test
    - test.echo
    - test.exception
    - test.false
    - test.fib
    - test.get_opts
    - test.kwarg
    - test.module_report
    - test.not_loaded
    - test.opts_pkg
    - test.outputter
    - test.ping
    - test.provider
    - test.providers
    - test.rand_sleep
    - test.rand_str
    - test.retcode
    - test.sleep
    - test.stack
    - test.true
    - test.try_
    - test.tty
    - test.version
    - test.versions
    - test.versions_information
    - test.versions_report</screen>
                </step>
                <step>
                    <para>Print the version of Salt running on a minion with
                            <command>test.version</command>:</para>
                    <screen># salt minion_name test.version
minion_name:
    2015.8.7</screen>
                    <para>Display the version of Salt and its dependencies on a minion with
                            <command>test.versions</command>:</para>
                    <screen># salt minion_name test.versions
minion_name:
    Salt Version:
               Salt: 2015.8.7
     
    Dependency Versions:
             Jinja2: 2.7.3
           M2Crypto: Not Installed
               Mako: Not Installed
             PyYAML: 3.10
              PyZMQ: 14.0.0
             Python: 2.7.9 (default, Dec 21 2014, 11:02:59) [GCC]
               RAET: Not Installed
            Tornado: 4.2.1
                ZMQ: 4.0.4
               cffi: 1.1.0
           cherrypy: Not Installed
           dateutil: Not Installed
              gitdb: Not Installed
          gitpython: Not Installed
              ioflo: Not Installed
            libgit2: Not Installed
            libnacl: Not Installed
       msgpack-pure: Not Installed
     msgpack-python: 0.4.6
       mysql-python: Not Installed
          pycparser: 2.10
           pycrypto: 2.6.1
             pygit2: Not Installed
       python-gnupg: Not Installed
              smmap: Not Installed
            timelib: Not Installed
     
    System Versions:
               dist: SuSE 12 x86_64
            machine: x86_64
            release: 3.12.67-60.64.24-default
             system: SUSE Linux Enterprise Server  12 x86_64</screen>
                </step>
            </procedure>
        </sect2>

        <sect2>
            <title>Getting Help</title>
            <para>Explore Salt help documentation with the following procedure.</para>

            <procedure>
                <step>
                    <para>To get help, enter the following command:</para>
                    <screen>salt minion_name sys.doc</screen>
                    <para><command>sys.doc </command>displays far to much information in most cases.
                        It is better to be more specific. Target a specific module with the
                        following command:</para>
                    <screen>salt minion_name sys.doc test</screen>
                    <para>You can also look up information for any function in a module:</para>
                    <screen language="yaml">salt minion_name sys.doc test.versions
test.versions:

This function is an alias of ``versions_report``.

    Returns versions of components used by salt

    CLI Example:

        salt '*' test.versions_report</screen>
                </step>
            </procedure>
        </sect2>
    </sect1>








</chapter>
