<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC
  "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="ch-import-sync">
 <title>Importing and Synchronizing with Inter-Server Sync</title>
 <remark>
  ke 2013-08-11: by now, it is supported.  I'm about to update the
  existing docs according to mc's feedback.
  see bnc#833948
 </remark>
<!--

TODO This section got restructured upstream and has a new section
added "import channels from local medium"

https://access.redhat.com/site/documentation/en-US/Red_Hat_Satellite/5.6/html-single/Installation_Guide/index.html#chap-Installation_Guide-Content_and_Synchronization

 5.6_Installation_Guide.html:1691
 -->

 <indexterm>
 <primary>import</primary>
 <secondary>&susemgr; data</secondary>
 </indexterm>
 <indexterm>
 <primary>synchronization</primary>
 <secondary>&susemgr; data</secondary>
 </indexterm>
 <indexterm>
 <primary>&susemgr; configuration</primary>
 <secondary>&susemgr; data</secondary></indexterm>
 <para>
  After installing &susemgr;, you must provide it with the packages and
  channels to be served to client systems. This chapter explains how to
  import that data and keep it up to date.
 </para>
 <para>
  Two tool chains come installed as part of the
  <command>spacewalk-backend-tools</command> package:
  <command>mgr-exporter</command> for exporting and
  <command>mgr-inter-sync</command> for synchronization, as well as
  <command>mgr-ncc-sync</command>.
 </para>

<!-- 5.6_Installation_Guide.html:1691 ff -->

 <sect1 id="s1-export-tool">

  <title>Exporting with <command>mgr-exporter</command></title>
  <indexterm>

  <primary>mgr-exporter</primary></indexterm>

  <para>
   The &susemgr; exporter (<command>mgr-exporter</command>) exports
   a &susemgr; content listing in an XML format that the user then can import into
   another &susemgr;.  Export the content into a directory
   specified with the <option>-d</option> option, transport the
   directory to another &susemgr;, then use the
   <command>mgr-inter-sync</command> to import the
   contents.  These three steps synchronize two &susemgr;s so they
   serve identical content.
  </para>

   <para>
    The <command>mgr-exporter</command> tool can export the following content:
   </para><indexterm>
   <primary>mgr-exporter</primary>
   </indexterm>
   <itemizedlist>
    <listitem>
     <para>
      Channel Families
     </para>
    </listitem>
    <listitem>
     <para>
      Architectures
     </para>
    </listitem>
    <listitem>
     <para>
      Channel metadata
     </para>
    </listitem>
    <listitem>
     <para>
      Blacklists
     </para>
    </listitem>
    <listitem>
     <para>
      RPMs
     </para>
    </listitem>
    <listitem>
     <para>
      RPM metadata
     </para>
    </listitem>
    <listitem>
     <para>
      Patches <!-- was: Errata -->
     </para>
    </listitem>
    <listitem>
     <para>
      Kickstarts
     </para>
    </listitem>
    <listitem>
     <para>
      Support Information
     </para>
    </listitem>
    <listitem>
     <para>
      SUSE Product Data
     </para>
    </listitem>
    <listitem>
     <para>
      SUSE Subscriptions
     </para>
    </listitem>
   </itemizedlist>

   <para>
    To perform a &susemgr; export (<command>mgr-exporter</command>), the
    following prerequisites must be met:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      A successful &susemgr; installation.
     </para>
    </listitem>
    <listitem>
     <para>
      There must be sufficient disk space in the directory specified with the
      <option>--dir</option> option.  This directory will contain the exported contents.
     </para>
    </listitem>
   </itemizedlist>


   <sect2 id="s3-exporting-running">
    <title>Performing an Export</title><indexterm>
   <primary>&susemgr;</primary>
   <secondary>export</secondary></indexterm>

    <para>
     Export the current &susemgr; configuration into a backup or storage solution by executing the following command as &rootuser;:
    </para>

    <screen>mgr-exporter --dir=/var/sw-export --no-errata --channel <replaceable>channel_name</replaceable></screen>
    <para>
     When finished, the export directory may be moved to another &susemgr;
     or a storage solution using <command>rsync</command> or <command>scp
     -r</command>.
    </para>


   <para>
    The <command>mgr-exporter</command> tool offers several command line options. To
    use them, insert the option and appropriate value after the
    <command>mgr-exporter</command> command.
   </para>
   <variablelist>
    <title><command>mgr-exporter</command> Options:</title>
    <varlistentry>
    <term><option>-d <replaceable>DIRECTORY</replaceable></option>,
     <option>--dir=<replaceable>DIRECTORY</replaceable></option></term>
     <listitem>
      <para>
       Place the exported information into this directory.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-c<replaceable>CHANNEL_LABEL</replaceable></option>,
         <option>--channel=<replaceable>CHANNEL_LABEL</replaceable></option>
     </term>
     <listitem>
      <para>
       Process data for this specific channel (specified by label)
       only. NOTE: the channel's label is not the same as the
       channel's name.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--list-channels</option></term>
     <listitem>
      <para>
       List all available channels and exit.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--list-steps</option></term>
     <listitem>
      <para>
       List all of the steps that <command>mgr-exporter</command> takes
       while exporting data. These can be used as values for
       <option>--step</option>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-p --print-configuration</option></term>
     <listitem>
      <para>
       Print the configuration and exit.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--print-report</option></term>
     <listitem>
      <para>
       Print a report to the terminal when the export is complete.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-rpms</option></term>
     <listitem>
      <para>
       Do not retrieve actual RPMs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-packages</option></term>
     <listitem>
      <para>
       Do not export RPM metadata.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-errata</option></term>
     <listitem>
      <para>
       Do not process patch (errata) information.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-kickstarts</option></term>
     <listitem>
      <para>
       Do not process kickstart
       data (provisioning only).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug-level=<replaceable>LEVEL_NUMBER</replaceable></option></term>
     <listitem>
      <para>
       Override the amount of messaging sent to log files and generated
       on the screen set in <filename>/etc/rhn/rhn.conf</filename>,
       <literal>0</literal>-<literal>6</literal> (<literal>2</literal>
       is default).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--start-date=START_DATE</option></term>
     <listitem>
      <para>
       The start date limit that the last modified dates are compared
       against. Must be in the format YYYYMMDDHH24MISS (for example,
       <literal>20071225123000</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--end-date=END_DATE</option></term>
     <listitem>
      <para>
       The end date limit that the last modified dates are compared
       against. Must be typed in the format YYYYMMDDHH24MISS (for example,
       <literal>20071231235900</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--make-isos=<replaceable>ISOS</replaceable></option></term>
     <listitem>
      <para>
       Create a channel
       dump ISO directory called <filename><replaceable>ISOS</replaceable></filename> (for
       example, <literal>--make-isos=cd</literal> or
       <literal>dvd</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--email</option></term>
     <listitem>
      <para>
       Email a report of what was exported and what errors may have
       occurred.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--traceback-mail=<replaceable>EMAIL</replaceable></option></term>
     <listitem>
      <para>
       Alternative email address for <option>--email</option>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--db=<replaceable>DB</replaceable></option></term>
     <listitem>
      <para>
       Include alternate database connect string:
       <replaceable>username/password@SID</replaceable>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--hard-links</option></term>
     <listitem>
      <para>
       Export the RPM and kickstart files with hard links to the
       original files.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   <para>
    You can deselect some contents, such as RPMs, errata, or &kickstart;s, which you
    do not want to export, by using the <option>--no-*</option> command
    line options.  The default is to export everything.
   </para>

   <para>
    <remark>ke 2013-08-11: todo -
    check with mc/QA if mgr-inter-sync will be the tool used for this.
    Or (additionally) mgr-ncc-sync?</remark>

    The amount of time it takes <command>mgr-exporter</command> to
    export data depends on the number and size of the exported channels.
    The <option>--no-packages</option>,
    <option>--no-kickstarts</option>, <option>--no-errata</option>, and
    <option>--no-rpms</option> options reduce the amount of time
    required for <command>mgr-exporter</command> to run, but also
    prevents export of potentially useful information. For
    that reason, only use these options when certain
    the content is not required and can be excluded.  Additionally,
    you must use the matching options for
    <command>mgr-inter-sync</command> when importing the data. For
    example, if you use <option>--no-kickstarts</option> with
    <command>mgr-exporter</command> you must specify the
    <option>--no-kickstarts</option> option when importing the data.
   </para>
   <para>
    When exporting a <systemitem>base</systemitem> channel, you must
    also export the
    <systemitem>client tools</systemitem> channel associated with that
    base channel. This is because the tools channels contain the tools
    that install packages for autoinstalling a machine through
    &susemgr;.
    For instance, if you export <guimenu>sles11-sp1-pool-x86_64</guimenu> you
    must also export the <guimenu>sles11-sp1-suse-manager-tools-x86_64</guimenu>
    channel in order to autoinstall machines to &sls; 11 SP1 x86_64.
   </para>
   </sect2>
  


 </sect1>
 <sect1 id="s1-sat-sync-tool">
  <!-- this section got simplified and improved and reorganized
       upstream from 5.4 to 5.5 -->
  <title>Importing with &susemgr; Synchronization Tool <command>mgr-inter-sync</command></title>
  <indexterm>
  <primary>&susemgr; Synchronization Tools</primary>
  </indexterm>

  <para>
   Before distributing packages via &susemgr;, the packages must first
   be uploaded to the &susemgr; server. This section describes the
   process for importing packages and other channel data.
  </para>

  <!-- probably not needed
  <important>
   <para>
    To populate custom channels correctly, you must first populate at least
    one base channel. The <command>mgr-ncc-sync</command> tool
    creates the necessary directory structures and permissions; without
    these, the custom channel
    tools will not work properly. For this reason, you should use these
    instructions to set up your base channels
    and then create your custom channels.
    <!-\- then refer to the <citetitle>&rhna; Channel
    Management Guide</citetitle> for steps to establish custom channels.-\->
   </para>
  </important>
  -->

  <sect2 id="s2-import-rhnsst">
   <title>mgr-inter-sync</title><indexterm>
   <primary>mgr-inter-sync</primary>
   <secondary>options</secondary></indexterm>
   <remark>toms 2011-02-10: See bnc#670206. According to Joe, add a
      warning, something like: "Warning: If you add a channel here you
      can't remove it!"</remark>
   <para>
    The <command>mgr-inter-sync</command> tool enables a &susemgr; server to update
    its database metadata and RPM packages from a &susemgr; master
    server.
    <!-- FIXME???
	 , another &susemgr; within your organization, or local
	 media. -->
   </para>
   <!-- FIXME: checkit -->
   <!-- not needed?
   <important>
    <para>
     Running <command>mgr-ncc-sync</command> can import a large amount of
     data, especially on newly installed Satellite servers. If your database
     has performance issues after a significant amount of data changes,
     consider gathering statistics on the database. Refer to
     <xref linkend="s1-config-smdb"/> for more information.
    </para>
   </important>
   -->
   <para>
   <!-- FIXME: remove this para, when restructuring to 5.6 version -->
    The &susemgr; synchronization tool <command>mgr-inter-sync</command>
    can be used in a closed environment, such as the one created with a
    disconnected install, or it may obtain data directly from another
    &susemgr;. Closed environment imports can get their data from the
    XML data generated by <command>mgr-exporter</command>.
   </para>
   <para>
    <command>mgr-inter-sync</command> works incrementally, or in
    steps. To obtain patch (errata)
    information, it first requires information about the packages contained. For the packages
    to be updated, the tool first identifies the associated channels.
    For this reason, the &susemgr; synchronization tool performs
    the following actions in order:
   </para>
   <orderedlist>
    <listitem>
     <para>
      <option>channel-families</option> — Import/synchronize channel
      family (architecture) data.
     </para>
    </listitem>
    <listitem>
     <para>
      <option>channels</option> — Import/synchronize channel
      data.
     </para>
    </listitem>
    <listitem>
     <para>
      <option>rpms</option> — Import/synchronize RPMs.
     </para>
    </listitem>
    <listitem>
     <para>
      <option>packages</option> — Import/synchronize full package data for
      those RPMs retrieved successfully.
     </para>
    </listitem>
    <listitem>
     <para>
      <option>errata
      </option> — Import/synchronize patch (errata)
      information.
     </para>
    </listitem>
   </orderedlist>
   <para>
    Users can perform each of these steps individually for testing purposes
    with the effect of forcing the tool to stop when a step completes.
    All preceding steps, however, will execute. For example,
    calling the <option>rpms</option> step automatically ensures the
    <option>channels</option> and <option>channel-families</option> steps
    execute first. To initiate an individual step, use the
    <option>--step</option> option:
   </para>
<screen>mgr-inter-sync --step=<replaceable>rpms</replaceable>
</screen>
   <para>
    In addition to <option>--step</option>, the &susemgr;
    synchronization tool offers many other command line options. To use
    them, insert the option and the appropriate value after the
    <command>mgr-inter-sync</command> command when launching
    import or synchronization.
   </para>
   <!-- FIXME: the following list might be incomplete -->
   <variablelist>
    <title>&susemgr; Import and Synchronization Options:</title>
    <varlistentry>
     <term><option>-h</option>, <option>--help</option></term>
     <listitem>
      <para>
       Display the list of options and exit.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-d=</option>,
     <option>--db=<replaceable>DB</replaceable></option></term>
     <listitem>
      <para>
       Include alternate database connect string:
       <replaceable>username/password@SID</replaceable>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-m=</option>,
     <option>--mount-point=<replaceable>MOUNT_POINT</replaceable></option></term>
     <listitem>
      <para>
       Import or synchronization from local media mounted to the &susemgr;. Use
       in closed environments (such as those created during disconnected
       installs).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--list-channels</option></term>
     <listitem>
      <para>
       List all available channels and exit.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-c<replaceable>CHANNEL_LABEL</replaceable></option>,
     <option>--channel=<replaceable>CHANNEL_LABEL</replaceable></option></term>
     <listitem>
      <para>
       Process data for this channel only. Multiple channels can be
       included by repeating the option. By default
       all channels on the &susemgr; server will be refreshed.
       Use <option>--list-channels</option> to see the available
       channel labels.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-p</option>, <option>--print-configuration</option></term>
     <listitem>
      <para>
       Print the current configuration and exit.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-ssl</option></term>
     <listitem>
      <para>
       <emphasis>Not Advisable</emphasis> - Turn off SSL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--orgid=<replaceable>ORGID</replaceable></option></term>
     <listitem>
      <para>
       Organization to which the sync imports data (default: the admin
       account).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--step=<replaceable>STEP</replaceable></option></term>
     <listitem>
      <para>
       Perform the synchronization process <emphasis>only</emphasis> to the step
       specified. Typically used in testing.  By default, all steps
       are executed.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-rpms</option></term>
     <listitem>
      <para>
       Do not retrieve actual RPMs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-packages</option></term>
     <listitem>
      <para>
       Do not process full package data.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-errata</option></term>
     <listitem>
      <para>
       Do not process patch (errata) information.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--no-kickstarts</option></term>
     <listitem>
      <para>
       Do not process &kickstart;
       <!-- [GALAXY] 'autoyast' -->
       data (provisioning only).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--force-all-errata</option></term>
     <listitem>
      <para>
       Forcibly process all patch metadata without performing a diff.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--force-all-packages</option></term>
     <listitem>
      <para>
       Forcibly process all package metadata without performing a diff.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug-level=<replaceable>LEVEL_NUMBER</replaceable></option></term>
     <listitem>
      <para>
       Override the amount of messaging sent to log files and
       generated on the screen set in
       <filename>/etc/rhn/rhn.conf</filename>,
       <literal>0</literal>-<literal>6</literal> (<literal>2</literal>
       is default).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--email</option></term>
     <listitem>
      <para>
       Email a report of what was imported/synchronized to the designated
       recipient of traceback email.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--traceback-mail=<replaceable>TRACEBACK_MAIL</replaceable></option></term>
     <listitem>
      <para>
       Direct synchronization output (from <option>--email</option>) to this mail
       address.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-s=</option>,
     <option>--server=<replaceable>SERVER</replaceable></option></term>
     <listitem>
      <para>
       Include the hostname of an alternative server to connect to for
       synchronization.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--http-proxy=<replaceable>HTTP_PROXY</replaceable></option></term>
     <listitem>
      <para>
       Add an alternative HTTP proxy server in the form
       <replaceable>hostname:port</replaceable>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--http-proxy-username=<replaceable>PROXY_USERNAME</replaceable></option></term>
     <listitem>
      <para>
       Include the username for the alternative HTTP proxy server.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--http-proxy-password=<replaceable>PROXY_PASSWORD</replaceable></option></term>
     <listitem>
      <para>
       Include the password for the alternative HTTP proxy server.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--ca-cert=<replaceable>CA_CERT</replaceable></option></term>
     <listitem>
      <para>
       Use an alternative SSL CA certificate by including the full path
       and filename.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
     <option>--systemid=<replaceable>SYSTEM_ID</replaceable></option></term>
     <listitem>
      <para>
       <emphasis>For debugging only</emphasis> - Include path to
       alternative digital system ID.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--batch-size=<replaceable>BATCH_SIZE</replaceable></option></term>
     <listitem>
      <para>
       <emphasis>For debugging only</emphasis> - Set maximum batch size in
       percent for XML/database-import processing.
       <!--man mgr-nccsync for more information.-->
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 id="s2-import-local">
   <title>Preparing for Import</title>
   <para>
    To perform the &susemgr; import, the following prerequisites must
    be met:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      The &susemgr; installation must have been performed successfully.
     </para>
    </listitem>
    <listitem>
     <para>
      The &susemgr; exporter (<command>mgr-exporter</command>) data or
      access to the master &susemgr; must be available.
     </para>
    </listitem>
   </itemizedlist>

   <procedure>
    <title>Preparing &susemgr; Exporter Data</title>
    <para>
     To import data previously exported using &susemgr; exporter, you
     must first copy that data onto the local system. The following
     steps prepare the import as described in <xref
     linkend="s2-import-running"/>.
    </para>
    <step>
      <para>
       Log into the machine as &rootuser;.
      </para>
    </step>
     <step>
      <para>
       Create a target directory for the files, such as:
      </para>
<screen>mkdir /var/sw-import/</screen>
     </step>
     <step>
      <para>
       Make the export data available on the local machine in the
       directory created in the previous step. This can be done by
       copying the data directly or by mounting the data from another
       machine using NFS. The following is an example
       <command>scp</command> command copying the data into the new
       directory:
      </para>
<screen>scp -r root@master.suma.example.com:/var/sw-export/* /var/sw-import</screen>
     </step>
   </procedure>
   <para>
     Now that the data is available, you can proceed to performing the
     import.
    </para>
  </sect2>

  <sect2 id="s2-import-running">
   <title>Running the Import</title><indexterm>
   <primary>import</primary>
   <secondary>placing patches (errata) in repository</secondary></indexterm><indexterm>
   <primary>import</primary>
   <secondary>populating the channel</secondary></indexterm><indexterm>
   <primary>import</primary>
   <secondary>running the import</secondary></indexterm><indexterm>
   <primary>susemanager-backend-tools </primary></indexterm><indexterm>
   <primary>mgr-inter-sync</primary></indexterm><indexterm>
   <primary>&susemgr; configuration</primary>
   <secondary>--step=channel-families</secondary></indexterm><indexterm>
   <primary>&susemgr; configuration</primary>
   <secondary>--step=channels</secondary></indexterm>
   <indexterm>
   <primary>&susemgr; configuration</primary>
   <secondary>--step=rpms</secondary></indexterm>
   <indexterm>
   <primary>&susemgr; configuration</primary>
   <secondary>--step=kickstarts</secondary></indexterm>
   <para>
    The <systemitem>susemanager-backend-tools</systemitem> package
    provides the <command>mgr-inter-sync</command> program for managing
    all package, channel, and patch (errata) imports and inter-server
    synchronizations.  <command>mgr-inter-sync</command> is a symlink to
    <command>satellite-sync</command>.
   </para>
   <para>
    The following process assumes the user has copied
    all data to <filename>/var/sw-import</filename>.
   </para>
   <para>
    The first step in importing channels into the database is listing the
    channels available for import. This is accomplished with the command:
   </para>
<screen>mgr-inter-sync --list-channels --mount-point /var/sw-import</screen>
   <para>
    The next step is to initiate the import of a specific channel. Do this
    using a channel
    label presented in the previous list. The command will look like:
   </para>
<screen>mgr-inter-sync -c rhel-i386-6 --mount-point /var/sw-import</screen>
   <note>
    <para>
     Importing package data can take up to two hours per channel. You can
     begin registering systems to channels as soon as they appear in the
     &susemgr; Web interface. No packages are necessary for registration,
     although updates cannot be retrieved from &susemgr; until the
     channel is completely populated.
    </para>
   </note>
   <para>
    Repeat this step for each channel
    or include them all within a single command by passing each channel
    label preceded by an additional <option>-c</option> flag:
   </para>
<screen
>mgr-inter-sync -c <replaceable>channel-label-1</replaceable> <!--
-->-c <replaceable>channel-label-2</replaceable> --mount-point /var/sw-import
</screen>
   <para>
    This conducts the following tasks in this order:
   </para>
   <orderedlist>
    <listitem>
     <para>
      Populating the tables describing common features for channels
      (channel families). This can also be accomplished individually by
      passing the <option>--step=channel-families</option> option to
      <command>mgr-inter-sync</command>.
     </para>
    </listitem>
    <listitem>
     <para>
      Creating a particular channel in the database and importing the
      metadata describing the channel.  Individually, use the
      <option>--step=channels</option> option.
     </para>
    </listitem>
    <listitem>
     <para>
      Moving the RPM packages from the temporary repository into their
      final location. Individually, use the <option>--step=rpms</option>
      option.
     </para>
    </listitem>
    <listitem>
     <para>
      Parsing the header metadata for each package in the channel,
      uploading the package data, and associating it with the channel.
      Individually, use the <option>--step=packages</option> option.
     </para>
    </listitem>
    <listitem>
     <para>
      Identifying patches (errata) associated with the packages and
      including them in the repository.  Individually, use the
      <option>--step=errata</option> option.
     </para>
    </listitem>
    <listitem>
     <para>
      Syncing kickstart data.  Individually, use the
      <option>--step=kickstarts</option> option.
     </para>
     <remark>mc 2013-08-12: explain more: supportinfo, SUSE
     Product subscriptions.
     </remark>
     <remark>ke 2013-08-13: this is not listed in the satellite-sync
     manpage.</remark>
     <remark>emap 2014-04-15: Not sure what to do here.</remark>
    </listitem>
   </orderedlist>
   <para>
    After running the preceding sample command, the population of the
    channel should be complete. All of the packages should have been
    moved out of the repository; this can be verified with the following
    command sequence:
   </para>
   <screen>cd /var/sw-import/
ls -alR | grep rpm</screen>
   <para>
    If all RPMs have been installed and moved to their permanent
    locations, then this count will be zero, and the administrator may
    safely remove the temporary repository (in this case,
    <filename>/var/sw-import/</filename>).
   </para>
  </sect2>
 </sect1>
 <sect1 id="s1-synchronize">
  <title>Synchronizing</title>
  <indexterm>
  <primary>&susemgr; configuration</primary>
  <secondary>keeping channel data in sync</secondary></indexterm>

  <para>
   An update channel
   is only as useful as the freshness of the information in that channel.
   Since  &susemgr; is designed to be a standalone environment,
   any update advisories published by &suse; must be manually imported and
   synchronized by the administrator of the &susemgr;.
  </para>

  <para>
   During synchronization over the network, the &susemgr;
   synchronization tool performs the following steps:
  </para>

  <orderedlist>
   <listitem>
    <para>
     Connects over SSL to the &susemgr; master, authenticates itself as
     a &susemgr;, and triggers an export of the channel data.
    </para>
   </listitem>
   <listitem>
    <para>
     Examines the export and identifies differences between the
     &susemgr; data set and the exported &suse; data set. For a
     particular channel, the following information is analyzed:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Channel metadata
      </para>
     </listitem>
     <listitem>
      <para>
       Metadata of all packages in that channel
      </para>
     </listitem>
     <listitem>
      <para>
       Metadata for all patches (errata)
       that affect that channel
      </para>
     </listitem>
    </itemizedlist>
    <note>
     <para>
      All analysis is performed on the &susemgr; slave; the master
      delivers only an export of its channel information and remains
      ignorant of any details regarding the &susemgr; slave.
     </para>
    </note>
   </listitem>
   <listitem>
    <para>
     After the analysis of the export data, any differences are imported
     into the &susemgr; database. Note that importing new
     packages may take variable lengths of time. For a large update, an
     import can take several hours.
    </para>
   </listitem>
  </orderedlist>

 </sect1>
 <sect1 id="s1-sync-iss">

  <title>Inter-Server Synchronization</title>
<remark>emap 2014-04-15: original content replaced by RH-Refguide 1.3 Multiple Sat.</remark>
  <para>
   Inter-Server Synchronization
   (ISS) allows a &susemgr; to synchronize content and permissions
   from another &susemgr; instance in a peer-to-peer
   relationship. However, in the following section, a &susemgr; which
   receives content will be referred to as a "Slave Server" and a
   &susemgr; which acts as the source, where the content is pulled
   from, is called a "Master Server". When using ISS to synchronize
   content, the slave instance may have a different setup from that of
   the Master for non-content entities such as users and
   organizations. The administrator on the slave instance is free to
   add, remove, and change entities independently from what occurs on
   the master instance.
   </para>
   <note>
    <para>
     Master and slave are legacy terms that carry connotations that
     are not enforced by the ISS protocol. Keep their restricted
     meanings, as described above, in mind while reading this section.
    </para>
   </note>
    <para>
     With &susemgr; 2.1, ISS allows the slave &susemgr; to duplicate
     the organizational trust hierarchy and the custom channel
     permissions from the settings configured on the master. This is
     accomplished by exporting information about specific
     organizations from the master &susemgr; to the receiving slave
     server. The administrator on the slave can then choose to map the
     master organizations to specific slave organizations. Future
     synchronization operations use this information to assign custom
     channel ownership to the slave organization, which is mapped to a
     specific master organization. It can also map the trust
     relationships between the exposed master organization to matching
     slave organizations, creating the equivalent relationships on the
     slave.
    </para>
    <note>
     <para>
      An inter-server sync between a &susemgr; 1.7 server as master
      and a &susemgr; 2.1 server as client will succeed but generate
      an error email to the admin. The error email is harmless and can
      be deleted.
     </para>
    </note>

    <sect2 id="s2-sync-iss-master">
      <title>Configuring the Master &susemgr; Server</title>
    <para>
     Log in to the Web interface as &susemgr; administrator. Click on
     <menuchoice><guimenu>Admin</guimenu><guimenu>ISS
     Configuration</guimenu><guimenu>Master
     Setup</guimenu></menuchoice>. In the top right-hand corner of
     this page, click <guimenu>Add New Slave</guimenu> and fill in the
     following information:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Slave Fully Qualified Domain Name (FQDN)
      </para>
     </listitem>
     <listitem>
      <para>
       Allow Slave to Sync? - Choosing this field will allow the slave
       &susemgr; to access this master &susemgr;. Otherwise, contact
       with this slave will be denied.
      </para>
     </listitem>
     <listitem>
      <para>
       Sync all orgs to Slave? - Checking this field will synchronize
       all organizations to the slave &susemgr;.
      </para>
     </listitem>
    </itemizedlist>
    <note>
     <para>
      Choosing the <guimenu>Sync All Orgs to Slave?</guimenu> option
      on the <guimenu>Master Setup</guimenu> page will override any
      specifically selected organizations in the local organization
      table.
     </para>
    </note>
    <para>
     Click <guimenu>Create</guimenu>.  Optionally, click on any local
     organization to be exported to the slave &susemgr; then click
     <guimenu>Allow Orgs</guimenu>.
    </para>
    <note>
     <para>
      In &susemgr; 1.7 the master server used the
      <command>iss_slaves</command> parameter in the
      <filename>/etc/rhn/rhn.conf</filename> file to identify which
      slaves were allowed to contact the master. &susemgr; 2.1 uses the
      information in the <guimenu>Master Setup</guimenu> page to
      determine this information.
     </para>
   </note>
    <para>
      To enable the inter-server synchronization (ISS) feature, edit
      the <filename>/etc/rhn/rhn.conf</filename> file and set:
      <command>disable_iss=0</command>. Save the file and restart the
      httpd service with <command>service httpd restart</command>.
    </para>
    </sect2>
    <sect2 id="s2-sync-iss-slave">
     <title>Configuring Slave Servers</title>
     <para>
      Slave &susemgr;s can be configured during installation with
      &yast; or later via the Web interface.
     </para>
     <sect3>
      <title>During Installation with &yast;</title>
      <para>
       The &susemgr; &yast; module is able to setup a slave server.
      </para>
      <para>
       In the dialog with the NCC credentials you can select between
       <guimenu>Connect to NCC</guimenu> and <guimenu>Connect to SUSE
       Manager for inter-server sync</guimenu>. Choose
       <guimenu>Connect to &susemgr; for inter-server
       sync</guimenu>. The additional field <guimenu>Parent Server
       Name</guimenu> will be enabled. Enter the name (FQDN) of the
       master server.
      </para>
      <para>
       The <guimenu>NCC Mirror Credential Username</guimenu> and
       <guimenu>Password</guimenu> must be the same as the first
       credential on the &susemgr; master server.  Use the
       <guimenu>Test</guimenu> button to check if the credentials are
       working.
      </para>

      <note>
       <title>Inter-server Sync and &scc; (SCC)</title>
       <para>
        Mirror credentials are only needed for SCC connections, for
        slave server mirror credentials are no longer needed.
       </para>
      </note>

      <para>
       The slave server forwards registrations to Novell Customer
       Center (NCC) by using the parent server as a proxy. A &susemgr;
       server acting as a parent accepts <quote>register</quote> and
       <quote>de-register</quote> operations and forwards them
       directly to its parent. The top &susemgr; server will send
       these requests to NCC and return the answers back the chain to
       the originally requesting slave server.
      </para>
      <para>
       There are checks implemented that need to be passed before a
       &susemgr; server forwards such a request. It checks, if the
       requesting slave is in the allowed list and it verifies the
       user and password. These must match the first configured mirror
       credential.
      </para>
     </sect3>
     <sect3>
      <title>Web Interface</title>
    <para>
     Slave servers are the machines that will receive content
     synchronized from the master server. To securely transfer content
     to the slave servers, the ORG-SSL certificate from the master
     server is needed. The certificate can be downloaded over HTTP
     from the <filename>/pub/</filename> directory of any
     &susemgr;. The file is called RHN-ORG-TRUSTED-SSL-CERT , but can
     be renamed and placed anywhere in the local file system of the
     slave, such as the <filename>/usr/share/rhn/</filename>
     directory.
    </para>
    <para>
     Log in to the slave &susemgr; as administrator and click on
     <menuchoice><guimenu>Admin</guimenu><guimenu>ISS
     Configuration</guimenu><guimenu>Slave
     Setup</guimenu></menuchoice>. In the top right-hand corner, click
     <guimenu>Add New Master</guimenu> and fill in the following information:
     </para>
    <itemizedlist>
     <listitem>
      <para>
       Master Fully Qualified Domain Name (FQDN)
      </para>
     </listitem>
     <listitem>
      <para>
       Default Master?
      </para>
     </listitem>
     <listitem>
      <para>
       Filename of this Master's CA Certificate: use the full path to the CA Certificate.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Click <guimenu>Add New Master</guimenu>.
    </para>
</sect3>
   </sect2>
   <sect2 id="s2-sync-iss-syncrun">
    <title>Performing Inter-Server Synchronization</title>
    <para>
     Once the master and slave servers are configured, a
     synchronization can be performed by running the
     <command>mgr-inter-sync</command> command:
    </para>
     <screen>mgr-inter-sync -c <replaceable>YOUR-CHANNEL</replaceable></screen>
   </sect2>
   <sect2 id="s2-sync-iss-map-orgs">
    <title>Mapping &susemgr; Master Server Organizations to Slave Organizations</title>
    <para>
     The master &susemgr; should now show up in the slave's setup page
     under <menuchoice><guimenu>Admin</guimenu><guimenu>ISS
     Configuration</guimenu><guimenu>Slave
     Setup</guimenu></menuchoice>. If it does not, check the
     steps above.
    </para>
    <para>
     A mapping between organizational names on the master &susemgr;
     allows for channel access permissions to be set on the master
     server and propagated when content is synced to a slave
     &susemgr;. Not all organization and channel details need to be
     mapped for all slaves. &susemgr; administrators can select which
     permissions and organizations can be synchronized by allowing or
     omitting mappings.
    </para>
    <para>
     To complete the mapping, log in to the Slave &susemgr; as
     administrator. Click
     <menuchoice><guimenu>Admin</guimenu><guimenu>ISS
     Configuration</guimenu><guimenu>Slave
     Setup</guimenu></menuchoice> and select a Master &susemgr; by
     clicking its name. Use the drop-down box to map the exported
     master organization name to a matching local organization in the
     slave &susemgr;, then click <guimenu>Update Mapping</guimenu>.
    </para>
    <para>
      On the command line, issue the sync command on each of the custom channels to obtain the
correct trust structure and channel permissions:
    </para>
    <screen>mgr-inter-sync -c <replaceable>YOUR-CHANNEL</replaceable></screen>
  </sect2>
  <sect2 id="s2-sync-iss-autosync">
   <title>Automated Configuration</title>
    <para>
    The <command>spacewalk-sync-setup</command> tool allows users to
    specify a Master and Slave &susemgr; instance and uses
    configuration files to set up the information described in both
    the master and slave setup. It can create a set of default
    configuration files if requested. Essentially, it automates the
    previous setup and mapped configuration for master-slave
    relationships.
    </para>
    <para>
     For automated configuration to succeed, the following prerequisites must be met:
    </para> 
    <itemizedlist>
     <listitem>
      <para>
       The <filename>spacewalk-util</filename> package needs to be
       installed on the system that will issue the
       <command>spacewalk-sync-setup</command> command.
      </para>
   </listitem>
   <listitem>
    <para>
     Organizations with custom permissions must exist on the master &susemgr;.
    </para>
   </listitem>
   <listitem>
    <para>
      Existing organizations within the Slave &susemgr; must be present.
    </para>
   </listitem>
  </itemizedlist>
  <sect3>
   <title>Configuring the Master &susemgr; Server</title>
    <para>
     Enable the inter-server synchronization (ISS) feature in the
     <filename>/etc/rhn/rhn.conf</filename> file:
    </para>
    <screen>disable_iss=0</screen>
    <para>
     Save the configuration file and restart the httpd service:
    </para>
    <screen>service httpd restart</screen>
  </sect3> 
  <sect3>
  <title>Configuring Slave Servers</title>
   <para>
    Slave servers are the machines that will have their content
    synchronized by the master server.  To securely transfer content
    to the slave servers, the ORG-SSL certificate from the master
    server is needed. The certificate can be downloaded over HTTP from
    the <filename>/pub/</filename> directory of any &susemgr;. The
    file is called <filename>RHN-ORG-TRUSTED-SSL-CERT</filename>, but
    can be renamed and placed anywhere in the local file system of the
    slave, such as the <filename>/usr/share/rhn/</filename> directory.
   </para>
   <para>
    Log in to the slave &susemgr; as administrator and click
    <menuchoice><guimenu>Admin</guimenu><guimenu>ISS
    Configuration</guimenu><guimenu>Slave
    Setup</guimenu></menuchoice>. On the top right-hand corner, click
    <guimenu>Add New Master</guimenu> and fill in the following
    information:
   </para>
    <itemizedlist>
     <listitem>
      <para>
       Master Fully Qualified Domain Name (FQDN)
      </para>
     </listitem>
     <listitem>
      <para>
       Default Master?
      </para>
     </listitem>
     <listitem>
      <para>
       Filename of this Master's CA Certificate: use the full path to the CA Certificate.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Click <guimenu>Add New Master</guimenu>.
    </para>
  </sect3>
  <sect3>
  <title>Mapping Master Organizations to Slave Organizations</title>
  <para>
   Log in to a system. It does not matter if it is a master or slave
   &susemgr;, or a different system altogether as long as the system can
   access the public <filename>XMLRPC API</filename> of the master and
   slave &susemgr;s.
  </para>
  <para>
    Run <command>spacewalk-sync-setup</command> on a command line interface:
  </para>
  <screen>spacewalk-sync-setup --ms=[Master_FQDN] \
  --ml=[Master_Sat_Admin_login] \
  --mp=[Master_Sat_Admin_password] \
  --ss=[Slave FQDN] --sl=[Slave_Sat_Admin_login]--sp=[Slave_Sat_Admin_password> \
  --create-templates --apply</screen>
  <para>
   Where:
  </para>
    <itemizedlist>
     <listitem>
      <para>
       --ms=MASTER, --master-server=MASTER is the FQDN of the Master to connect to,
      </para>
     </listitem>
     <listitem>
      <para> --ml=MASTER_LOGIN, --master-login=MASTER_LOGIN is the
      administrator login for the master &susemgr;,</para>
     </listitem>
     <listitem>
      <para>
        --mp=MASTER_PASSWORD, --master-password=MASTER_PASSWORD is the
        password for the &susemgr; administrator login on the master
        &susemgr;,
      </para>
     </listitem>
     <listitem>
      <para>
       --ss=SLAVE, --slave-server=SLAVE is the FQDN of the slave &susemgr; to connect to,
      </para>
     </listitem>
     <listitem>
      <para>
       --sl=SLAVE_LOGIN, --slave-login=SLAVE_LOGIN is the &susemgr;
       administrator login for the slave server,
      </para>
     </listitem>
     <listitem>
      <para>
       --sp=SLAVE_PASSWORD, --slave-password=SLAVE_PASSWORD is the
       password for the &susemgr; administrator login on the slave
       server,
      </para>
     </listitem>
     <listitem>
      <para>
       --ct, --create-templates is the option that creates both a
       master and a slave setup file for the master/slave pair,
      </para>
     </listitem>
     <listitem>
      <para>
        --apply tells &susemgr; to make the changes specified by the
        setup files to the specified &susemgr; instances.
      </para>
     </listitem>
    </itemizedlist>
    <note>
     <para>
      For more setup options, run <command>spacewalk-sync-setup--help</command>.
     </para>
    </note>
    <para>
     The output from this command will be as follows:
    </para>
    <screen>INFO: Connecting to [admin@master-fqdn]
INFO: Connecting to [admin@slave-fqdn]
INFO: Generating master-setup file $HOME/.spacewalk-sync-setup/master.txt
INFO: Generating slave-setup file $HOME/.spacewalk-sync-setup/slave.txt
INFO: Applying master-setup $HOME/.spacewalk-sync-setup/master.txt
INFO: Applying slave-setup $HOME/.spacewalk-sync-setup/slave.txt</screen>
    <para>
     On the command line, issue the mgr-inter-sync command on each of
     the custom channels to obtain the correct trust structure and
     channel permissions:
    </para>
    <screen>mgr-inter-sync -c <replaceable>channel-name</replaceable></screen>
  </sect3>
</sect2>
 </sect1>
 <sect1 id="s2-sync-iss-config-sync-org">
 <title>Organizational Synchronizing</title>
  <para>
   Inter-Server Synchronization can also be used to import content to
   any specific organization. This can be done locally or by remote
   synchronization. This function is useful for a disconnected
   &susemgr; with multiple organizations, where content is retrieved
   through channel dumps or by exporting from connected &susemgr;s and
   then importing into the disconnected &susemgr;. Organizational
   synchronization can be used to export custom channels from
   connected &susemgr;s. It can also be used to effectively move
   content between multiple organizations.
  </para>
  <para>
   Organizational synchronization follows a clear set of rules in
   order to maintain the integrity of the source organization:
   </para>
  <itemizedlist>
   <listitem>
    <para>
     If the source content belongs to a base organization, it will
     default to this base organization even if a destination
     organization is specified. This ensures that specified content is
     always in that privileged base organization.
    </para>
   </listitem>
   <listitem>
    <para>
     If an organization is specified at the command line, content will
     be imported from that organization.
    </para>
   </listitem>
   <listitem>
    <para>
     If no organization is specified, it will default to organization 1.
    </para>
   </listitem>
  </itemizedlist>
   <para>
   The following are three example scenarios where organizational IDs
   (orgid) are used to synchronize between &susemgr;s:
  </para>
  <orderedlist>
   <listitem>
    <para>
     Import content from a &susemgr; master to a slave:
    </para>
<screen>mgr-inter-sync --iss-parent=master.suma.example.com -c <replaceable>channel-name</replaceable> --orgid=2
</screen>
   </listitem>
   <listitem>
    <para>
     Import content from an exported dump of a specific organization:
    </para>
<screen>mgr-inter-sync -m /dump -c <replaceable>channel-name</replaceable> --orgid=2
</screen>
   </listitem>
   <listitem>
    <para>
     Import content from &susemgr; Hosted (assuming the system is
     registered and activated). If the source organization is not
     specified, the base channel is chosen):
    </para>
<screen>mgr-inter-sync -c <replaceable>channel-name</replaceable>
</screen>
   </listitem>
  </orderedlist>
</sect1>
  <sect1 id="s2-sync-iss-config-topologies">
   <title>Inter-Server Synchronization Use Cases</title>
   <para>
    Inter-server synchronization (ISS) provides several different
    ways for synchronizing content, depending on the needs of the
    organization. The following are some of the more typical uses
    showcasing how to make the most of this feature depending on your
    environment.
   </para>
   <figure>
    <title>Staging &susemgr; Server</title>
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="iss-diagram_staging-model.png" width="400"/>
     </imageobject>
     <imageobject role="fo">
<!-- FIXME toms: width -->
      <imagedata fileref="iss-diagram_staging-model.png" width="80%"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    In this example, the stage &susemgr; is used to prepare the content
    and perform quality assurance (QA) to make sure that packages
    are fit for production use. After content is approved to go to
    production, the production &susemgr; server can synchronize
    the content from the stage &susemgr;.
   </para>
   <figure>
    <title>Master Server and Slave Peers that include their own custom content</title>
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="iss-diagram_master-slave-and-extras-model.png" width="600"/>
     </imageobject>
     <imageobject role="fo">
<!-- FIXME toms: width -->
      <imagedata fileref="iss-diagram_master-slave-and-extras-model.png" width="80%"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    In this example, the &susemgr; master is the development channel,
    from which content is distributed to all &susemgr; production slaves.
    Some &susemgr; slaves have extra content not present in &susemgr; master
    channels. These packages are preserved, but all changes from the
    &susemgr; master are synchronized to &susemgr; slaves.
   </para>
   <figure>
    <title>&susemgr; Slaves are Maintained Exactly as the &susemgr; Master</title>
    <mediaobject>
     <imageobject role="html">
      <imagedata fileref="iss-diagram_master-slave-basic.png" width="600"/>
     </imageobject>
     <imageobject role="fo">
<!-- FIXME toms: width -->
      <imagedata fileref="iss-diagram_master-slave-basic.png" width="80%"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    In this example, the &susemgr; master (e.g., a software or
    hardware vendor) provides data to its customer. These changes are
    regularly synchronized to the &susemgr; slaves.
   </para>
  </sect1>


</chapter>
