<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC
"-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="preparing.and.registering.clients">
    <title>Preparing and Registering Clients</title>
    <para><?oxy_comment_start author="coyote" timestamp="20151023T162152+0200" comment="This section needs to be clarified. The intro is a little vague"?>
        <?oxy_comment_end?>Client registration with SUSE Manager is executed with a bootstrap script
        on the server which deploys all necessary information to clients. The bootstrap script
        contains parameters which assigns a client system to its base channel. Two of these
        important parameters are:</para>
    <itemizedlist>
        <listitem>
            <para>Activation Keys</para>
        </listitem>
        <listitem>
            <para>GNU Privacy Guard (GPG) Keys</para>

        </listitem>
    </itemizedlist>
    <note>
        <title>GPG Keys</title>
        <para>GPG Keys will not be covered in this guide. For more information see: <ulink url=""
                ><?oxy_custom_start type="oxy_content_highlight" color="255,60,255"?>GPG Keys and
                Bootstrap: Reference
            guide</ulink><?oxy_custom_end?><?oxy_comment_start author="coyote" timestamp="20151023T150256+0200" comment="Add link to reference guide"?></para>
        <?oxy_comment_end?>
    </note>
    <formalpara>
        <title>Activation
            <?oxy_comment_start author="coyote" timestamp="20151023T151635+0200" comment="Re-Work this to better suit entitlements, subscription counts and channels"?>Keys<?oxy_comment_end?></title>
        <para>Activation keys define the number of software entitlements, channels and groups a
            client system is allowed to subscribe to. This information is passed on to all systems
            registered with a key. Each activation key is bound to the organization for which it has
            been created. For this guide you will be using the default SUSE Manager organization
            which includes all software entitlements.</para>
    </formalpara>

    <para>In this chapter you will:</para>
    <orderedlist>
        <listitem>
            <para>Create activation keys for your new client channels</para>
        </listitem>
        <listitem>
            <para>Create a bootstrap script repository</para>
        </listitem>
        <listitem>
            <para>Modify your bootstrap script</para>
        </listitem>
        <listitem>
            <para>Create a client tools repository</para>
        </listitem>
        <listitem>
            <para>Connect your clients to &susemgr; Using the Modified bootstrap script</para>
        </listitem>
    </orderedlist>

    <sect1>
        <title>Creating Your Keys</title>
        <para>The following procedure will guide you through creating the activation keys for your
            two test channels.</para>

        <procedure>
            <title>Creating Activation Keys</title>
            <step>
                <para>Log in to the SUSE Manager Web interface as administrator. </para>
            </step>
            <step>
                <para>Switch to the Systems tab and select Activation Keys. </para>
            </step>
            <step>
                <para> Click the Create New Key link at the upper right corner. </para>
                <informalfigure>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="quickstart-activationkeys1.png"/>
                        </imageobject>
                    </mediaobject>
                </informalfigure>
            </step>
            <step>
                <para>Enter a Description to identify the generated activation key.</para>
            </step>
            <step>
                <para> Enter a human readable key string value such as: <command>SLES12-SP1
                    </command>. </para>
                <warning>
                    <title>Allowed Characters</title>
                    <para>For all &suse; Products do not use commas within the key string. All other
                        characters are allowed. Red Hat Products require commas. See: Activation
                        Keys and rhnreg_ks: Reference Guide </para>
                </warning>
            </step>
            <step>
                <para>Enter 1 in the <command>Usage:</command> field. This allows one client to
                    register using this key and uses one of your subscription entitlements.</para>
            </step>

            <step>
                <para>Select the &sle; 12 SP1 channel you added earlier from the <command>Base
                        Channels:</command> drop down.</para>
            </step>

            <step>
                <para>Select the virtualization check box as an <command>Add-on
                        entitlement:</command>.</para>
            </step>
            <step>
                <para>Leave the <command>Contact Method:</command> at default.</para>
            </step>
            <step>
                <para>Leave Universal Default unchecked. Click <command>Create Activation
                        key</command> to finish creating the key for the first channel.</para>
                <informalfigure>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="quickstart-activationkeys2.png" width="100%"/>
                        </imageobject>
                    </mediaobject>
                </informalfigure>
            </step>
            <step>
                <para>Repeat this procedure from step 2 and create a key for the &sle; 11 SP4
                    channel. The final list of keys should look similar to the following
                    image.</para>
                <informalfigure>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="quickstart-activationkeys3.png"/>
                        </imageobject>
                    </mediaobject>
                </informalfigure>
            </step>
        </procedure>

        <para> Proceed to the next section.</para>
    </sect1>
    <sect1>
        <title>Generating a Bootstrap Script</title>
        <para>This section covers the procedure of generating a template bootstrap script which will
            be copied and modified for both of your clients.</para>

        <note>
            <title>Bootstrap Scripting Best
                <?oxy_comment_start author="coyote" timestamp="20151023T161448+0200" comment="Add some best practice examples of bootstrapping clients in mass."?>Practices<?oxy_comment_end?></title>
            <para>Many of our customers are using unique methods to register clients for use with
                &susemgr; in mass using bootstrap. Using batch scripts for mass registration of both
                VM and Bare Metal machines is a possibility. Some of these methods will be covered
                in the Best Practice Guide and will be added as examples at a later time.</para>
        </note>

        <para>The following procedure will guide you through generating a bootstrap template
            script.</para>
        <procedure>
            <title>Creating a Bootstrap Script</title>
            <step>
                <para>On the SUSE Manager Web interface, switch to the <guimenu>Admin</guimenu> tab
                    and select <menuchoice>
                        <guimenu>SUSE Manager Configuration</guimenu>
                        <guimenu>Bootstrap Script.</guimenu>
                    </menuchoice></para>
            </step>
            <step>
                <para>Leave the defaults settings and click the <guimenu>Update</guimenu> button. </para>
                <informalfigure>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="quickstart-bootstrap1.png"/>
                        </imageobject>
                    </mediaobject>
                </informalfigure>
            </step>

            <step>
                <para>A template bootstrap script is generated and stored on the server's file
                    system in the <filename>/srv/www/htdocs/pub/bootstrap</filename> directory. </para>
                <screen><prompt>example-server: /srv/www/htdocs/pub/bootstrap#</prompt> <command>ls</command>
bootstrap.sh  client-config-overrides.txt  client_config_update.py  sm-client-tools.rpm
<prompt>example-server: /srv/www/htdocs/pub/bootstrap#</prompt>
 
 </screen>

                <para>The bootstrap script is also available at:
                        <filename>https://example-server.com/pub/bootstrap/</filename>.</para>
                <informalfigure>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="quickstart-bootstrap2.png"/>
                        </imageobject>
                    </mediaobject>
                </informalfigure>
            </step>
        </procedure>
        <para>The next section will cover copying and modifying your bootstrap template for use with
            each client.</para>
    </sect1>
    <sect1>
        <title>Modifying the Bootstrap Script</title>
        <para>In this section you will copy and modify the template bootstrap script you created
            from the previous section.</para>
        <remark>this section should go towards the end during modification</remark>

        <para>The minimal requirement when modifying a bootstrap script for use with &susemgr; is
            inclusion of an activation key. Depending on your organizations security requirements it
            is strongly recommended to include one or more (GPG) keys (for example, your
            organization key, and package signing keys). For the purposes of this guide you will be
            registering with the activation keys created in the previous section.</para>

        <procedure>
            <title>Modifying the Bootstrap Script</title>
            <step>
                <para>Log in as <systemitem>root</systemitem> to the &susemgr; Server.</para>
            </step>
            <step>
                <para>Navigate to the bootstrap directory with:</para>
                <screen>
<prompt>example-server:# </prompt><command>cd /srv/www/htdocs/pub/bootstrap/</command>
</screen>
            </step>
            <step>
                <para>Create and rename two copies of the template bootstrap script for use with
                    each of your clients.</para>
                <screen><prompt>example-server:/srv/www/htdocs/pub/bootstrap# </prompt><command>cp bootstrap.sh bootstrap-sles11-sp4.sh</command>
<prompt>example-server:/srv/www/htdocs/pub/bootstrap# </prompt><command>cp bootstrap.sh bootstrap-sles12-sp1.sh</command>
</screen>
            </step>
            <step>
                <para>Open <systemitem>sles12-sp1.sh</systemitem> for modification. Scroll down and
                    modify both lines marked in green. You must comment out <systemitem>#exit
                        1</systemitem> to activate the script and then enter the name of the key for
                    this script in the<systemitem>ACTIVATION_KEYS=</systemitem> field. See the
                    example script below.</para>
                <screen>

echo
echo
echo "MINOR MANUAL EDITING OF THIS FILE MAY BE REQUIRED!"
echo
echo "If this bootstrap script was created during the initial installation"
echo "of a SUSE Manager Server, the ACTIVATION_KEYS, and ORG_GPG_KEY values will"
echo "probably *not* be set (see below). If this is the case, please do the"
echo "following:"
echo "  - copy this file to a name specific to its use."
echo "    (e.g., to bootstrap-SOME_NAME.sh - like bootstrap-web-servers.sh.)"
echo "  - on the website create an activation key or keys for the system(s) to"
echo "    be registered."
echo "  - edit the values of the VARIABLES below (in this script) as"
echo "    appropriate:"
echo "    - ACTIVATION_KEYS needs to reflect the activation key(s) value(s)"
echo "      from the website. XKEY or XKEY,YKEY"
echo "    - ORG_GPG_KEY needs to be set to the name(s) of the corporate public"
echo "      GPG key filename(s) (residing in /srv/www/htdocs/pub) if appropriate. XKEY or XKEY,YKEY"
echo
echo "Verify that the script variable settings are correct:"
echo "    - CLIENT_OVERRIDES should be only set differently if a customized"
echo "      client-config-overrides-VER.txt file was created with a different"
echo "      name."
echo "    - ensure the value of HOSTNAME is correct."
echo "    - ensure the value of ORG_CA_CERT is correct."
echo
echo "Enable this script: comment (with #'s) this block (or, at least just"
echo "the exit below)"
echo
<command>#exit 1</command>

# can be edited, but probably correct (unless created during initial install):
# NOTE: ACTIVATION_KEYS *must* be used to bootstrap a client machine.
<command>ACTIVATION_KEYS=1-sles12-sp1</command>
ORG_GPG_KEY=
    
</screen>
            </step>
            <step>
                <para>When you have finished your modifications save the file and repeat this
                    procedure for the second bootstrap script. Then proceed to the next
                    section.</para>
            </step>
        </procedure>
        <note>
            <title>Finding Your Keys</title>
            <para>To find key names you have created: Select the <guimenu>Overview</guimenu> tab
                from the Web-GUI and then <menuchoice>
                    <guimenu>Manage Activation keys</guimenu>
                    <guimenu>Key Field</guimenu>
                </menuchoice>. All keys created for channels are listed here. You must enter the
                full name of the key you wish to use in the bootstrap script exactly as presented in
                the key field.</para>
        </note>
    </sect1>
    <sect1>
        <title>Creating the &susemgr; Tools Repository</title>
        <para>In the previous section you modified a bootstrap script for automating the connection
            of a client to the server. In this section you will create a repository on the &susemgr;
            Server for storing the client tools. These will be installed from the newly created
            repository during the bootstrap process. In the following procedure you will create the
            &sle; 12 SP1 tools repository. </para>
        <important>
            <title>Creating a Tools Repository when an SCC Channel has not been Synced</title>
            <para>Before following the procedure to create the tools repository make sure the &suse;
                vendor channel you will be using with your client has been completly synced. You can
                check this by running <replaceable>tail -f
                    /var/log/rhn/reposync/CHANNEL_NAME</replaceable>.log as
                    <systemitem>root</systemitem>. For example: <replaceable>tail -f
                    /var/log/rhn/reposync/sles12-sp1-pool-x86_64</replaceable>.log </para>
        </important>
        <procedure>
            <title>Generating the Tools Repository for &sle; 12 SP1</title>
            <step>
                <para>Open a terminal on the server as <systemitem>root</systemitem> and enter the
                    following command to list available bootstrap repositories:</para>
                <screen>
<prompt>example-server: #</prompt> mgr-create-bootstrap-repo -l
SLE-12-SP1-x86_64
</screen>
            </step>
            <step>
                <para>Then invoke the same command using the listed repository:</para>
                <screen>
<prompt>example-server: #</prompt> mgr-create-boostrap-repo SLE-12-SP1-x86_64                
</screen>
            </step>
            <step>
                <para>&susemgr; will create and add the client tools to the newly created
                        <replaceable>repositories</replaceable> directory located at
                        <replaceable>/srv/www/htdocs/pub/repositories/</replaceable></para>
            </step>
        </procedure>
        <para>You are now ready to proceed to the next section and connect your client using the
            modified bootstrap script.</para>
    </sect1>
    <sect1>
        <title>Connecting Your First Client</title>
        <para>This section covers connecting your clients to manager with the modified bootstrap
            script.</para>

        <procedure>
            <title>Running the Bootstrap Script</title>
            <step>
                <para>On your &susemgr; Server as <systemitem>root</systemitem> navigate to the
                    following directory.</para>
                <screen>
<prompt>example-server: #</prompt> cd /srv/www/htdocs/pub/bootstrap/
</screen>
            </step>
            <step>
                <para>Run the following command to execute the bootstrap script on the
                    client.</para>
                <screen>
<prompt>example-server:/srv/www/htdocs/pub/bootstrap #</prompt> cat <emphasis>MODIFIED-SCRIPT.SH</emphasis> | root@example-client.com /bin/bash
</screen>
            </step>
            <step>
                <para>The script will execute and proceed to download the required dependencies
                    located in the repositories directory you created earlier. Once the script has
                    finished running, log in to the WebGUI and select the systems tab to see your
                    new client listed.</para>
            </step>
            <remark>Add: a screen shot of the new client on the WebGUI</remark>
        </procedure>

<para>This concludes the bootstrap section of this guide. The next section will cover setup and
    configuration of Saltstack for use with &susemgr; 3. </para>


    </sect1>
</chapter>
