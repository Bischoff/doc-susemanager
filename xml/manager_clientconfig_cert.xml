<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl" 
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC
  "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="ch-certificates">
 <title>SSL Infrastructure</title>
 <para>
  For &susemgr; customers, security concerns are of the utmost importance.
  One of the strengths of &susemgr; is its ability to process every single
  request over Secure Sockets Layer (SSL). To maintain this level of
  security, customers installing &susemgr; within their infrastructure must
  generate custom SSL keys and certificates.
 </para>
 <para>
  Manual creation and deployment of SSL keys and certificates can be
  quite involved.  During installation, both the &susemgr; Proxy
  Server and the &susemgr; Server allow you to build your own SSL keys
  and certificates based on your own private Certificate Authority
  (CA).  In addition, a separate command line utility, the &susemgr; SSL
  Maintenance Tool, exists for this purpose. Regardless, these keys
  and certificates must then be deployed to all systems within your
  managed infrastructure. In many cases, deployment of these SSL keys
  and certificates is automated for you. This chapter describes
  efficient methods for conducting all these tasks.
 </para>
 <para>
  Please note that this chapter does not explain SSL in depth. The &susemgr;
  SSL Maintenance Tool was designed to hide much of the complexity involved
  in setting up and maintaining this public key infrastructure (PKI).
 </para>

 <sect1 id="s1-certificate-intro">
  <title>A Brief Introduction to SSL</title><indexterm>

  <primary>SSL (Secure Sockets Layer)</primary>

  <secondary>introduction</secondary></indexterm>

  <para>
   Secure Sockets Layer (SSL) is a protocol that enables client-server
   applications to transfer information securely. SSL uses a system of public
   and private key pairs to encrypt communication between clients and
   servers. Public certificates can be left accessible, while private keys
   must be secured. The mathematical relationship (a digital signature)
   between a private key and its paired public certificate makes this system
   work. Through this relationship, a connection of trust is established.
  </para>

  <note>
   <para>
    When discussing SSL, we refer to the public half of an SSL key
    pair (or key set) as the SSL public certificate.
   </para>
  </note>

  <para>
   An organization's SSL infrastructure is generally made up of the following SSL keys and certificates:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Certificate Authority (CA) SSL private key and public certificate:
     generally only one set per organization generated. The public
     certificate is digitally signed by its private key. The public
     certificate is distributed to every system.
    </para>
   </listitem>
   <listitem>
    <para>
     Web server SSL private key and public certificate: one set per
     application server. The public certificate is digitally signed by both
     its private key and the CA SSL private key. We often refer to a Web
     server's key set; this is because there is an intermediary SSL
     certificate request that is generated. All three are deployed to a
     &susemgr; Server.
    </para>
    <remark>mdejmek: all three of what? please explain</remark>
   </listitem>
  </itemizedlist>

  <para>
   Scenario: If you have one &susemgr; Server and five &susemgr; Proxy
   Servers, you will generate one CA SSL key pair and six Web server SSL key
   sets. The CA SSL public certificate is distributed to all systems and
   used by all clients to establish a connection to their respective
   upstream servers. Each server has its own SSL key set that is
   specifically tied to that server's hostname and generated using its own
   SSL private key and the CA SSL private key in combination. This
   establishes a digitally verifiable association between the Web server's
   SSL public certificate and the CA SSL key pair and server's private key.
   The Web server's key set cannot be shared with other Web servers.
  </para>

  <important>
   <para>
    The most critical portion of this system is the CA SSL key pair. From
    that private key and public certificate an administrator can regenerate
    any Web server's SSL key set. This CA SSL key pair must be secured. It
    is highly recommended that once the entire &susemgr; infrastructure of
    servers is set up and running, you archive the SSL build directory
    generated by this tool and/or the installers onto separate media, write
    down the CA password, and secure the media and password in a safe place.
   </para>
  </important>
 </sect1>
 <sect1 id="s1-certificate-rhnsmt">
<!--status="rfc"-->

  <title>The &susemgr; SSL Maintenance Tool</title><indexterm>

  <primary>Alert Notification Tool</primary>

  <secondary>mgr-ssl-tool</secondary></indexterm><indexterm>

  <primary>Alert Notification Tool</primary>

  <secondary>SSL Maintenance Tool</secondary></indexterm><indexterm>

  <primary>SSL (Secure Sockets Layer)</primary>

  <secondary>generating</secondary></indexterm>

  <para>
   &susemgr; provides a command line tool
   <command>mgr-ssl-tool</command> to ease management of your secure
   infrastructure: the SSL Maintenance Tool. This tool is available as part of the
   <filename>spacewalk-certs-tools</filename> package. This package can be
   found within the software channels for the latest &susemgr; Proxy Server
   and &susemgr; Server (as well as the &susemgr; Server ISO). SSL
   Maintenance Tool enables you to generate your own Certificate Authority
   SSL key pair, as well as Web server SSL key sets (sometimes called key
   pairs).
  </para>

  <para>
   This tool is only a build tool. It generates all the required SSL keys
   and certificates. It also packages the files in RPM format for quick
   distribution and installation on all client machines. It does not deploy
   them, however. That is either left to the administrator, or is automated
   by the &susemgr; Server.
  </para>

  <note>
   <para>
    The <filename>spacewalk-certs-tools</filename> package, which contains
    <command>mgr-ssl-tool</command>, can be installed and run on any current
    &sls; system with minimal requirements. This is offered as a convenience
    for administrators who want to manage their SSL infrastructure from
    a system other than their production &sls; or Proxy servers,
    e.g. a more recent &sls;.
   </para>
  </note>

  <para>
   The tool is required in the following situations:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     When updating your CA public certificate.
    </para>
   </listitem>
   <!-- bnc#813266: RH feature -->
   <!--
   <listitem>
    <para>
     When installing a &susemgr; Proxy Server version 1.2 or later that
     connects to the central &susemgr; Servers as its top-level service -
     the hosted service, for security reasons, cannot be a repository for
     your CA SSL key and certificate, which is private to your organization.
    </para>
   </listitem>
   -->
   <listitem>
    <para>
     When reconfiguring your &susemgr; infrastructure to use SSL where it
     previously did not.
    </para>
   </listitem>
   <listitem>
    <para>
     When adding multiple &susemgr; Servers to your &susemgr;
     infrastructure.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The tool is <emphasis>not</emphasis> required in the following situations:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     During installation of a &susemgr; Server - all SSL settings are
     configured during the installation process. The SSL keys and
     certificate are built and deployed automatically.
    </para>
   </listitem>
   <listitem>
    <para>
     During installation of a &susemgr; Proxy Server version 1.2 or later
     if connected to a &susemgr; Server version 1.2 or later as its
     top-level service - the &susemgr; Server contains all the required SSL
     information to configure, build and deploy the &susemgr; Proxy Server's
     SSL keys and certificates.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The installation procedures for both the &susemgr; Server and the
   &susemgr; Proxy Server ensure the CA SSL public certificate is deployed
   to the <filename>/pub</filename> directory of each server. This public
   certificate is used by the client systems to connect to the &susemgr;
   Server. Refer to <xref linkend="s1-certificate-rpms"/> for more
   information.
  </para>

  <para>
   If your organization's &susemgr; infrastructure deploys the latest
   version of &susemgr; Server as its top-level service, there will be no
   need to use the tool.
  </para>

  <sect2 id="s2-certificate-tool--create-explain">
   <title>SSL Generation Explained</title><indexterm>
   <primary>Alert Notification Tool</primary>
   <secondary>generation explained</secondary></indexterm>
   <para>
    The primary benefits of using the SSL Maintenance Tool are security,
    flexibility, and portability. Security is achieved through the creation
    of distinct Web server SSL keys and certificates for each &susemgr;
    server, all signed by a single Certificate Authority SSL key pair
    created by your organization. Flexibility is supplied by the tool's
    ability to work on any machine that has the
    <filename>spacewalk-certs-tools</filename> package installed.
    Portability exists in a build structure that can be safely stored
    anywhere and then installed whenever needed.
   </para>
   <para>
    If your infrastructure's top-level server is the most current
    &susemgr; Server, you only have to restore your
    <filename>ssl-build</filename> tree from an archive to the
    <filename>/root</filename> directory and utilize the configuration tools
    provided within the &susemgr; Server's Web site.
   </para>
   <para>
    To make the best use of the SSL Maintenance Tool, complete the following
    high-level tasks in the following order. Refer to the remaining sections
    for the required details:
   </para>
   <orderedlist>
    <listitem>
     <para>
      Install the <filename>spacewalk-certs-tools</filename> package on a
      system within your organization, for example, the &susemgr; Server or
      &susemgr; Proxy Server.
     </para>
    </listitem>
    <listitem>
     <para>
      Create a single Certificate Authority SSL key pair for your
      organization and install the resulting RPM or public certificate on
      all client systems.
     </para>
    </listitem>
    <listitem>
     <para>
      Create a Web server SSL key set for each Proxy and Server to be
      deployed and install the resulting RPMs on the &susemgr; Servers.
      Afterward, restart the <filename>httpd</filename> service:
     </para>
<screen>
<command>rcapache2 restart</command>
</screen>
    </listitem>
    <listitem>
     <para>
      Archive the SSL build tree - consisting of the primary build directory
      and all subdirectories and files - to a removable media, such as a
      CD or DVD. (Disk space requirements are insignificant.)
     </para>
    </listitem>
    <listitem>
     <para>
      Verify and then store that archive in a safe location, ideally a fireproof safe.
     </para>
    </listitem>
    <listitem>
     <para>
      Record and secure the CA password for future use.
     </para>
    </listitem>
    <listitem>
     <para>
      For security reasons, delete the build tree from the build system
      after the entire &susemgr; infrastructure is in place and configured.
     </para>
    </listitem>
    <listitem>
     <para>
      When additional Web server SSL key sets are needed, restore the build
      tree on a system running the SSL Maintenance Tool and repeat steps 3
      to 7.
     </para>
    </listitem>
   </orderedlist>
  </sect2>

  <sect2 id="s2-certificate-tool-options">
<!--status="rfc"-->
   <title>SSL Maintenance Tool Options</title><indexterm>
   <primary>Alert Notification Tool</primary>
   <secondary>options</secondary></indexterm>
   <para>
    The SSL Maintenance Tool offers several command line options for
    generating your Certificate Authority SSL key pair and managing your
    server SSL certificates and keys. The following
    command-line help options are available: <command>mgr-ssl-tool
    --help</command> (general), <command>mgr-ssl-tool --gen-ca
    --help</command> (Certificate Authority), and <command>mgr-ssl-tool
    --gen-server --help</command> (Web server). The manual page for
    mgr-ssl-tool is also quite detailed and available to assist:
    <command>man mgr-ssl-tool</command>.
   </para>
   <para>
    The two tables below break down the options by their related task,
    either CA or Web server SSL key set generation.
   </para>
   <para>
    This set of options must be preceded by the <option>--gen-ca</option>
    argument:
   </para>
   <table>
    <title>SSL Certificate Authority (CA) Options (<command>mgr-ssl-tool --gen-ca --help</command>)</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>
        <para>
         Option
        </para>
       </entry>
       <entry>
        <para>
         Description
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         <option>--gen-ca</option>
        </para>
       </entry>
       <entry>
        <para>
         Generates a Certificate Authority (CA) key pair and public RPM.
         This must be issued with any of the remaining options in this
         table.
        </para>
       </entry>
      </row>
      <row os="hidden">
       <entry>
	<remark>2014-03-31 froh:  this one doesn't need --gen-ca.</remark>
        <para>
         <option>-h</option>, <option>--help</option>
        </para>
       </entry>
       <entry>
        <para>
         Displays the help screen with a list of base options specific to
         generating and managing a Certificate Authority.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>-f</option>, <option>--force</option>
        </para>
       </entry>
       <entry>
        <para>
         Forcibly creates a new CA private key and/or public certificate.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>-p=</option>,
         <option>--password=<replaceable>PASSWORD</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The CA password. You will be prompted for this if it is not
	 given on the command line.
         Record it in a safe manner.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>-d=</option>,
         <option>--dir=<replaceable>BUILD_DIRECTORY</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Required for most commands</emphasis> - The directory
         where certificates and RPMs are built. The default is
         <filename>./ssl-build</filename>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--ca-key=<replaceable>FILENAME</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The CA private key filename. The default is
         <filename>RHN-ORG-PRIVATE-SSL-KEY</filename>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--ca-cert=<replaceable>FILENAME</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The CA public certificate filename. The default is <filename>
         RHN-ORG-TRUSTED-SSL-CERT</filename>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--cert-expiration=<replaceable>CA_CERT_EXPIRE</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The expiration date of the public CA certificate. The default is
         the number of days until one day prior to epoch rollover (or
         01-18-2038).
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-country=<replaceable>COUNTRY_CODE</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The two-letter country code. The default is US.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-state=<replaceable>STATE_OR_PROVINCE</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The state or province of the CA. The default is ''.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-city=<replaceable>CITY_OR_LOCALITY</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The city or locality. The default is ''.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-org=<replaceable>ORGANIZATION</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The company or organization, such as SUSE. The default is Example
         Corp. Inc.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-org-unit=<replaceable>SET_ORG_UNIT</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The organizational unit. The default is ''.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-common-name=<replaceable>HOSTNAME</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Typically not set for the CA.</emphasis> - The common
         name.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-email=<replaceable>EMAIL</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Typically not set for the CA.</emphasis> - The email
         address.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--rpm-packager=<replaceable>PACKAGER</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         Packager of the generated RPM, such as &quot;SUSE Admin
         (suse-admin@example.com).&quot;
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--rpm-vendor=<replaceable>VENDOR</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         Vendor of the generated RPM, such as &quot;IS/IT Example
         Corp.&quot;
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>-v</option>, <option>--verbose</option>
        </para>
       </entry>
       <entry>
        <para>
         Print debugging information in addtion to normal processing.
	 Accumulative - added &quot;v&quot;s result in increased detail.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--ca-cert-rpm=<replaceable>CA_CERT_RPM</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely changed</emphasis> - RPM name that houses the CA
         certificate (the base filename, not
         filename-version-release.noarch.rpm).
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--key-only</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Generates only a CA private key.
         Review <command>--gen-ca --key-only --help</command> for more
         information.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--cert-only</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Generates only a CA public
         certificate. Review <command>--gen-ca --cert-only --help</command>
         for more information.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--rpm-only</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Generates only an RPM for
         deployment. Review <command>--gen-ca --rpm-only --help</command>
         for more information.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--no-rpm</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Conducts all CA-related steps
         except RPM generation.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <para>
    The following set of options must be preceded by the
    <option>--gen-server</option> argument:
   </para>
   <table>
    <title>SSL Web Server Options (<command> mgr-ssl-tool --gen-server --help</command>)</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>
        <para>
         Option
        </para>
       </entry>
       <entry>
        <para>
         Description
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         <option>--gen-server</option>
        </para>
       </entry>
       <entry>
        <para>
         Generate the Web server's SSL key set, RPM, and tar archive. This
         must be issued with any of the remaining options in this table.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>-h</option>, <option>--help</option>
        </para>
       </entry>
       <entry>
        <para>
         Displays the help screen with a list of base options specific to
         generating and managing a server key-pair.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>-p=</option>,
         <option>--password=<replaceable>PASSWORD</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The CA password. You will be prompted for this if it is missing.
         Record it in a safe manner.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>-d=</option>,
         <option>--dir=<replaceable>BUILD_DIRECTORY</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Required for most commands</emphasis> - The directory
         where certificates and RPMs are built. The default is
         <filename>./ssl-build</filename>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--server-key=<replaceable>FILENAME</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The Web server's SSL private key filename. The default is
         <filename>server.key</filename>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--server-cert-req=<replaceable>FILENAME</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The Web server's SSL certificate request filename. The default is
         <filename>server.csr</filename>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--server-cert=<replaceable>FILENAME</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The Web server's SSL certificate filename. The default is
         <filename>server.crt</filename>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--startdate=<replaceable>YYMMDDHHMMSSZ</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The start date for the server certificate validity in the format:
         year, month, date, hour, minute, second (two characters per value).
         Z stands for Zulu and is required. The default is one week before
         generation.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--cert-expiration=<replaceable>SERVER_CERT_EXPIRE</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The expiration date of the server certificate. The default is the
         number of days until one day prior to epoch rollover (or
         01-18-2038).
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-country=<replaceable>COUNTRY_CODE</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The two-letter country code. The default is US.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-state=<replaceable>STATE_OR_PROVINCE</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The state or province. The default is North Carolina.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-city=<replaceable>CITY_OR_LOCALITY</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         <remark>toba : dont know what city defaults here</remark>
         The city or locality.
<!-- The default is  Raleigh -->
         .
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-org=<replaceable>ORGANIZATION</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The company or organization, such as SUSE. The default is Example
         Corp. Inc.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-org-unit=<replaceable>SET_ORG_UNIT</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The organizational unit. The default is unit.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-hostname=<replaceable>HOSTNAME</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The hostname of the &susemgr; Server to receive the key. The
         default is dynamically set to the build machine's hostname.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--set-email=<replaceable>EMAIL</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         The email address of the certificate contact. The default is
         <emphasis>admin@example.com</emphasis>.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--rpm-packager=<replaceable>PACKAGER</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         Packager of the generated RPM, such as &quot;SUSE Admin
         (<emphasis>suse-admin@example.com</emphasis>).&quot;
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--rpm-vendor=<replaceable>VENDOR</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         Vendor of the generated RPM, such as &quot;IS/IT Example
         Corp.&quot;
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>-v</option>, <option>--verbose</option>
        </para>
       </entry>
       <entry>
        <para>
         Displays verbose messaging. Accumulative - added &quot;v&quot;s
         result in increasing detail.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--key-only</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Generates only a server private
         key. Review <command>--gen-server --key-only --help</command> for
         more information.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--cert-req-only</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Generates only a server
         certificate request. Review <command>--gen-server --cert-req-only
         --help</command> for more information.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--cert-only</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Generates only a server
         certificate. Review <command>--gen-server --cert-only
         --help</command> for more information.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--rpm-only</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Generates only an RPM for
         deployment. Review <command>--gen-server --rpm-only
         --help</command> for more information.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--no-rpm</option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely used</emphasis> - Conducts all server-related
         steps except RPM generation.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--server-rpm=<replaceable>SERVER_RPM</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely changed</emphasis> - RPM name that houses the Web
         server's SSL key set (the base filename, not
         filename-version-release.noarch.rpm).
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <option>--server-tar=<replaceable>SERVER_TAR</replaceable></option>
        </para>
       </entry>
       <entry>
        <para>
         <emphasis>Rarely changed</emphasis> - Name of .tar archive of the
         Web server's SSL key set and CA public certificate that is used
         solely by the hosted &susemgr; Proxy Server installation routines
         (the base filename, not filename-version-release.tar).
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 id="s2-certificate-tool-CA-create">
   <title>Generating the Certificate Authority SSL Key Pair</title><indexterm>
   <primary>Network Alert Notification Tool</primary>
   <secondary>generating the CA</secondary></indexterm>
   <para>
    Before creating the SSL key set required by the Web server, you must
    generate a Certificate Authority (CA) SSL key pair. A CA SSL public
    certificate is distributed to client systems of the &susemgr; or
    &susemgr; Proxy. The SSL Maintenance Tool allows you to generate a CA
    SSL key pair, if needed, and reuse it for all subsequent &susemgr; Server
    deployments.
   </para>
   <para>
    The build process automatically creates the key pair and public RPM for
    distribution to clients. All CA components are created in the build directory
    specified in the command line, typically
    <filename>/root/ssl-build</filename> (or
    <filename>/etc/sysconfig/rhn/ssl</filename> for older &susemgr; and
    Proxy servers). To generate a CA SSL key pair, run the following command after replacing the example values with those appropriate for your organization:
   </para>
<screen>mgr-ssl-tool --gen-ca --password=<replaceable>MY_CA_PASSWORD</replaceable> --dir=&quot;/root/ssl-build&quot; \
--set-state=&quot;North Carolina&quot; --set-city=&quot;Raleigh&quot; \
--set-org=&quot;Example Inc.&quot; --set-org-unit=&quot;SSL CA Unit&quot;</screen>
   <para>
    This will result in the following relevant files in the specified build
    directory:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <filename>RHN-ORG-PRIVATE-SSL-KEY</filename>: the CA SSL private;
      key
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>RHN-ORG-TRUSTED-SSL-CERT</filename>: the CA SSL public
      certificate;
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>rhn-org-trusted-ssl-cert-<replaceable>VER-REL</replaceable>.noarch.rpm</filename>: the RPM prepared for distribution to client systems. This file contains
      the CA SSL public certificate (above) and installs it in this
      location: <filename>/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT</filename>;
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>rhn-ca-openssl.cnf</filename>: the SSL CA configuration;
      file
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>latest.txt</filename>: always lists the latest versions
      of the relevant files.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Once finished, you are ready to distribute the RPM file to client systems.
    Refer to <xref linkend="s1-certificate-rpms"/>.
   </para>
  </sect2>

  <sect2 id="s2-certificate-tool-server-create">
   <title>Generating Web Server SSL Key Sets</title><indexterm>
   <primary>Alert Notification Tool</primary>
   <secondary>generating the server certificate</secondary></indexterm>
   <para>
    Although you must have a CA SSL key pair already generated, you
    will likely generate Web server SSL key sets more frequently,
    especially if more than one Proxy or &susemgr; is deployed.
    Ensure that the value for <option>--set-hostname</option> is
    different for each server: a distinct set of SSL keys and
    certificates must be generated and installed for every &susemgr;
    server hostname.
   </para>
   <para>
    The server certificate build process works much like CA SSL key pair
    generation with the exception that all server components are saved in
    subdirectories of the build directory and reflect the key
    machine name as given by the <option>--set-hostname=<replaceable>MACHINE_NAME</replaceable></option> option, such as <filename>/root/ssl-build/MACHINE_NAME/</filename>.
    To generate a server certificate, issue the following command after replacing the example values with those appropriate for your organization:
   </para>
<screen>mgr-ssl-tool --gen-server --password=<replaceable>MY_CA_PASSWORD</replaceable> \
--dir=&quot;/root/ssl-build&quot; --set-state=&quot;North Carolina&quot; \
--set-city=&quot;Raleigh&quot; --set-org=&quot;Example Inc.&quot; \
--set-org-unit=&quot;IS/IT&quot; --set-email=&quot;admin@example.com&quot; \
--set-hostname=<replaceable>&quot;mgrbox1.example.com&quot;</replaceable></screen>
   <para>
    This command generates the following relevant files in a machine-specific
    subdirectory of the build directory:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <filename>server.key</filename>: the Web server's SSL private
      server key;
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>server.csr</filename>: the Web server's SSL certificate
      request;
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>server.crt</filename>: the web server's SSL public
      certificate;
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>rhn-org-httpd-ssl-key-pair-<replaceable>MACHINE_NAME-VER-REL</replaceable>.noarch.rpm</filename>: the RPM prepared for distribution to &susemgr; and Proxy servers. Its
      associated src.rpm file is also generated. This RPM file contains the three
      files above, which are installed in the following locations:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <filename>/etc/apache2/ssl.key/server.key</filename>
       </para>
      </listitem>
      <listitem>
       <para>
        <filename>/etc/apache2/ssl.csr/server.csr</filename>
       </para>
      </listitem>
      <listitem>
       <para>
        <filename>/etc/apache2/ssl.crt/server.crt</filename>
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
    <listitem>
     <para>
      <filename>rhn-server-openssl.cnf</filename>: the Web server's SSL configuration file;
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>latest.txt</filename>: always lists the latest versions
      of the relevant files.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Once finished, you are ready to distribute and install the RPM on its
    respective &susemgr; or Proxy server. Note that the <filename>httpd</filename>
    service must be restarted after installation:
   </para>
<screen>rcapache2 restart</screen>
  </sect2>
 </sect1>
 <sect1 id="s1-certificate-rpms">
<!--status="rfc"-->

  <title>Deploying the CA SSL Public Certificate to Clients</title><indexterm>

  <primary>SSL (Secure Sockets Layer)</primary>

  <secondary>installation of</secondary></indexterm>

  <para>
   Both the &susemgr; and Proxy server installation
   processes allow for easy client deployment by generating a CA SSL
   public certificate and RPM. These are made publicly available by placing a copy of one or both into the
   <filename>/srv/www/htdocs/pub/</filename> directory of the &susemgr;
   or Proxy server.
  </para>

  <para>
   Use any Web browser to inspect the contents of this directory: http://proxy-or-susemgr.example.com/pub/.
  </para>

  <para>
   The CA SSL public certificate in that directory can be downloaded to a
   client system using <command>wget</command> or <command>curl</command>. Replace example file names with the actual names of the certificate or RPM before running the following
   commands:
  </para>

<screen>curl -O http://proxy-or-susemgr.example.com/pub/RHN-ORG-TRUSTED-SSL-CERT
wget http://proxy-or-susemgr.example.com/pub/RHN-ORG-TRUSTED-SSL-CERT</screen>

  <para>
   Alternatively, if the CA SSL public certificate RPM resides in the
   <filename>/pub</filename> directory, it can be installed on a client
   system directly:
  </para>

<screen>rpm -Uvh http://proxy-or-susemgr.example.com/pub/rhn-org-trusted-ssl-cert-<replaceable>VER-REL</replaceable>.noarch.rpm
</screen>

 </sect1>
 <sect1 id="s1-certificate-configuration">
<!--status="rfc"-->

  <title>Configuring Client Systems to Use Certificates</title><indexterm>

  <primary>SSL (Secure Sockets Layer)</primary>

  <secondary>configuration of</secondary></indexterm>

  <para>
   Once the RPM or certificate has been deployed to a client system, the
   administrator of that system must edit the configuration files of
   the Update Agent/Online Updater to use the new CA SSL public
   certificate file and connect to the appropriate &susemgr; or Proxy server. The generally accepted location for that CA SSL public
   certificate is in the <filename>/usr/share/rhn</filename> directory.
  </para>

  <para>
   The &susemgr; and Proxy server both have
   <command>mgr-bootstrap</command> installed by default, which can
   greatly reduce these repetitive steps and simplify the process of
   registering and configuring client systems. Refer to <xref
   linkend="ch-bootstrap"/> for details.
  </para>
 </sect1>
</chapter>
