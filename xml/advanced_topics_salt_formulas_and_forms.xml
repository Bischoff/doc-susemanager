<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
                 type="text/xml" 
                 title="Profiling step"?>

<!DOCTYPE chapter[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="advanced.topics.salt.formulas.and.forms">

    <title>Salt Formulas and SUSE Manager</title>
    <para/>

    <sect1>

        <title>File Structure Overview</title>

        <para>All folders located in the following directories should contain a
                <literal>form.yml</literal> file. These files are detected as formula recipes and
            may be applied to groups and systems:</para>
        <screen>/srv/formula_data/</screen>
        <screen>/usr/share/susemanager/formulas/metadata/</screen>

        <para>Each time a page for a formula is requested, the server will load a form.yml file,
            parse it to JSON and then send it to a client. On the client the form is generated in
            JavaScript. Edited values entered by a user are sent back to the server and saved. All
            formula data is saved in:</para>
        <screen>/srv/susemanager/formula_data/</screen>
        <itemizedlist>
            <listitem>
                <para>Formulas that are applied to groups and servers will be stored in:</para>
                <screen>group_formulas.json</screen>
                <screen>server_formulas.json</screen>
            </listitem>
            <listitem>
                <para> Form pillar values for groups are stored in:</para>
                <screen>group_pillar/&lt;group-id&gt;_&lt;formula-name&gt;.json</screen>
                <para>Form pillar values for systems are stored in:</para>
                <screen>pillar/&lt;minion-id&gt;_&lt;formula-name&gt;.json</screen>
            </listitem>
        </itemizedlist>

        <sect2>
            <title> SUSE Manager Generated Pillar Data </title>
            <para>When pillar data is generated (e.g. after applying the highstate) the following
                external pillar script generates pillar data for packages, group ids, etc. and
                includes all pillar data for a system:</para>
            <screen>/usr/share/susemanager/modules/pillar/suma_minion.py</screen>
            <para>The process is executed as follows:</para>
            <procedure>
                <step>
                    <para>The suma_minion.py script starts and finds all formulas for a system (by
                        checking the <literal>group_formulas.json</literal> and
                            <literal>server_formulas.json</literal> files). </para>
                </step>
                <step>
                    <para>suma_minion.py loads the values for each formula (groups and from the
                        system) and merges them with the highstate (default: if no values are found,
                        a group overrides a system if $scope: group etc.).</para>
                </step>
                <step>
                    <para>suma_minion.py also includes a list of formulas applied to the system in a
                        pillar named formulas. This structure makes it possible to include states.
                        The top file (in this case specifically generated by the mgr_master_tops.py
                        script) includes a state called formulas for each system. This includes the
                            <literal>formulas.sls</literal> file located in:</para>
                    <screen>/usr/share/susemanager/formulas/states/</screen>
                    <para>The content looks similar to the following:</para>
                    <screen>include: {{ pillar["formulas"] }}</screen>
                    <para>This pillar includes all formulas, that are specified in pillar data
                        generated from the external pillar script.</para>
                </step>
            </procedure>
        </sect2>
    </sect1>

    <sect1>
        <title>Formula Requirements</title>
        <para>Formulas should be designed/created directly after a SUSE Manager installation, but if
            you encounter any issues check the following:</para>
        <itemizedlist>
            <listitem>
                <para>The external pillar script (suma_minion.py) must include formula data</para>
            </listitem>
            <listitem>
                <para>Data is saved to <filename>/srv/susemanager/formula_data</filename> and the
                        <filename>pillar</filename> and <filename>group_pillar</filename>
                    sub-directories. These should be automatically generated by the server</para>
            </listitem>
            <listitem>
                <para>Formulas must be included for every minion listed in the top file. Currently
                    this process is initiated by the <filename>mgr_master_tops.py</filename> script
                    which includes the formulas.sls file located in:</para>
                <screen>/usr/share/susemanager/formulas/states/</screen>
                <para>This directory must be a salt file root. Keep in mind file roots are
                    configured on the salt-master (SUSE Manager) located in:</para>
                <screen>/etc/salt/master.d/susemanager.conf</screen>
            </listitem>

        </itemizedlist>
    </sect1>

</chapter>
